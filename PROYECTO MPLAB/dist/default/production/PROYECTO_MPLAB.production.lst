

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jan 19 21:28:03 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209                           
   210                           	psect	idataCOMMON
   211  0162                     __pidataCOMMON:
   212                           
   213                           ;initializer for _cuenta_atras
   214  0162  3401               	retlw	1
   215  0163  3400               	retlw	0
   216                           
   217                           ;initializer for _cont_display
   218  0164  3403               	retlw	3
   219  0165  3400               	retlw	0
   220  000C                     _PIR1bits	set	12
   221  000B                     _INTCONbits	set	11
   222  0001                     _TMR0	set	1
   223  0006                     _PORTB	set	6
   224  0005                     _PORTA	set	5
   225  0007                     _PORTC	set	7
   226  0008                     _PORTD	set	8
   227  0009                     _PORTEbits	set	9
   228  005A                     _T0IF	set	90
   229  008C                     _PIE1bits	set	140
   230  0081                     _OPTION_REGbits	set	129
   231  008F                     _OSCCONbits	set	143
   232  0089                     _TRISE	set	137
   233  0088                     _TRISD	set	136
   234  0087                     _TRISC	set	135
   235  0086                     _TRISB	set	134
   236  0085                     _TRISA	set	133
   237  0189                     _ANSELH	set	393
   238  0188                     _ANSEL	set	392
   239                           
   240                           	psect	cinit
   241  0015                     start_initialization:	
   242                           ; #config settings
   243                           
   244  0015                     __initialization:
   245                           
   246                           ; Initialize objects allocated to COMMON
   247  0015  120A  118A  2162  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   248  001A  00FA               	movwf	__pdataCOMMON& (0+127)
   249  001B  120A  118A  2163  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   250  0020  00FB               	movwf	(__pdataCOMMON+1)& (0+127)
   251  0021  120A  118A  2164  120A  118A  	fcall	__pidataCOMMON+2	;fetch initializer
   252  0026  00FC               	movwf	(__pdataCOMMON+2)& (0+127)
   253  0027  120A  118A  2165  120A  118A  	fcall	__pidataCOMMON+3	;fetch initializer
   254  002C  00FD               	movwf	(__pdataCOMMON+3)& (0+127)
   255                           
   256                           ; Clear objects allocated to COMMON
   257  002D  01F6               	clrf	__pbssCOMMON& (0+127)
   258  002E  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   259  002F  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   260  0030  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   261  0031                     end_of_initialization:	
   262                           ;End of C runtime variable initialization code
   263                           
   264  0031                     __end_of__initialization:
   265  0031  0183               	clrf	3
   266  0032  120A  118A  2953   	ljmp	_main	;jump to C main() function
   267                           
   268                           	psect	bssCOMMON
   269  0076                     __pbssCOMMON:
   270  0076                     _timer_iniciado:
   271  0076                     	ds	2
   272  0078                     _cont:
   273  0078                     	ds	2
   274                           
   275                           	psect	dataCOMMON
   276  007A                     __pdataCOMMON:
   277  007A                     _cuenta_atras:
   278  007A                     	ds	2
   279  007C                     _cont_display:
   280  007C                     	ds	2
   281                           
   282                           	psect	cstackCOMMON
   283  0070                     __pcstackCOMMON:
   284  0070                     ?_tmr0:
   285  0070                     ??_tmr0:	
   286                           ; 1 bytes @ 0x0
   287                           
   288  0070                     ?_setup:	
   289                           ; 1 bytes @ 0x0
   290                           
   291  0070                     ?_isr:	
   292                           ; 1 bytes @ 0x0
   293                           
   294  0070                     ?_main:	
   295                           ; 1 bytes @ 0x0
   296                           
   297  0070                     ?_tabla:	
   298                           ; 1 bytes @ 0x0
   299                           
   300  0070                     tabla@a:	
   301                           ; 2 bytes @ 0x0
   302                           
   303                           
   304                           ; 2 bytes @ 0x0
   305  0070                     	ds	2
   306  0072                     ??_tabla:
   307  0072                     ??_isr:	
   308                           ; 1 bytes @ 0x2
   309                           
   310                           
   311                           ; 1 bytes @ 0x2
   312  0072                     	ds	4
   313                           
   314                           	psect	cstackBANK0
   315  0000                     __pcstackBANK0:
   316  0000                     ??_setup:
   317  0000                     ??_main:	
   318                           ; 1 bytes @ 0x0
   319                           
   320                           
   321                           	psect	maintext
   322  0153                     __pmaintext:	
   323                           ; 1 bytes @ 0x0
   324 ;;
   325 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   326 ;;
   327 ;; *************** function _main *****************
   328 ;; Defined at:
   329 ;;		line 92 in file "LAB0.c"
   330 ;; Parameters:    Size  Location     Type
   331 ;;		None
   332 ;; Auto vars:     Size  Location     Type
   333 ;;		None
   334 ;; Return value:  Size  Location     Type
   335 ;;                  1    wreg      void 
   336 ;; Registers used:
   337 ;;		wreg, status,2, status,0, pclath, cstack
   338 ;; Tracked objects:
   339 ;;		On entry : B00/0
   340 ;;		On exit  : 0/0
   341 ;;		Unchanged: 0/0
   342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   343 ;;      Params:         0       0       0       0       0
   344 ;;      Locals:         0       0       0       0       0
   345 ;;      Temps:          0       0       0       0       0
   346 ;;      Totals:         0       0       0       0       0
   347 ;;Total ram usage:        0 bytes
   348 ;; Hardware stack levels required when called: 3
   349 ;; This function calls:
   350 ;;		_setup
   351 ;; This function is called by:
   352 ;;		Startup code after reset
   353 ;; This function uses a non-reentrant model
   354 ;;
   355                           
   356                           
   357                           ;psect for function _main
   358  0153                     _main:
   359  0153                     l1053:	
   360                           ;incstack = 0
   361                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   362                           
   363                           
   364                           ;LAB0.c: 93:     setup();
   365  0153  120A  118A  2127  120A  118A  	fcall	_setup
   366  0158                     l75:	
   367                           ;LAB0.c: 94:     while(1){
   368                           
   369  0158                     l76:	
   370                           ;LAB0.c: 96:     }
   371                           
   372  0158  2958               	goto	l75
   373  0159  120A  118A  2812   	ljmp	start
   374  015C                     __end_of_main:
   375                           
   376                           	psect	text1
   377  0127                     __ptext1:	
   378 ;; *************** function _setup *****************
   379 ;; Defined at:
   380 ;;		line 100 in file "LAB0.c"
   381 ;; Parameters:    Size  Location     Type
   382 ;;		None
   383 ;; Auto vars:     Size  Location     Type
   384 ;;		None
   385 ;; Return value:  Size  Location     Type
   386 ;;                  1    wreg      void 
   387 ;; Registers used:
   388 ;;		wreg, status,2, status,0
   389 ;; Tracked objects:
   390 ;;		On entry : 0/0
   391 ;;		On exit  : 0/0
   392 ;;		Unchanged: 0/0
   393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   394 ;;      Params:         0       0       0       0       0
   395 ;;      Locals:         0       0       0       0       0
   396 ;;      Temps:          0       0       0       0       0
   397 ;;      Totals:         0       0       0       0       0
   398 ;;Total ram usage:        0 bytes
   399 ;; Hardware stack levels used: 1
   400 ;; Hardware stack levels required when called: 2
   401 ;; This function calls:
   402 ;;		Nothing
   403 ;; This function is called by:
   404 ;;		_main
   405 ;; This function uses a non-reentrant model
   406 ;;
   407                           
   408                           
   409                           ;psect for function _setup
   410  0127                     _setup:
   411  0127                     l1009:	
   412                           ;incstack = 0
   413                           ; Regs used in _setup: [wreg+status,2+status,0]
   414                           
   415                           
   416                           ;LAB0.c: 103:     ANSEL = 0;
   417  0127  1683               	bsf	3,5	;RP0=1, select bank3
   418  0128  1703               	bsf	3,6	;RP1=1, select bank3
   419  0129  0188               	clrf	8	;volatile
   420                           
   421                           ;LAB0.c: 104:     ANSELH = 0;
   422  012A  0189               	clrf	9	;volatile
   423                           
   424                           ;LAB0.c: 106:     TRISA = 0;
   425  012B  1683               	bsf	3,5	;RP0=1, select bank1
   426  012C  1303               	bcf	3,6	;RP1=0, select bank1
   427  012D  0185               	clrf	5	;volatile
   428                           
   429                           ;LAB0.c: 107:     TRISB = 0;
   430  012E  0186               	clrf	6	;volatile
   431                           
   432                           ;LAB0.c: 108:     TRISC = 0;
   433  012F  0187               	clrf	7	;volatile
   434                           
   435                           ;LAB0.c: 109:     TRISD = 0;
   436  0130  0188               	clrf	8	;volatile
   437  0131                     l1011:
   438                           
   439                           ;LAB0.c: 110:     TRISE = 0b00000111;
   440  0131  3007               	movlw	7
   441  0132  0089               	movwf	9	;volatile
   442  0133                     l1013:
   443                           
   444                           ;LAB0.c: 112:     PORTA = 0;
   445  0133  1283               	bcf	3,5	;RP0=0, select bank0
   446  0134  1303               	bcf	3,6	;RP1=0, select bank0
   447  0135  0185               	clrf	5	;volatile
   448  0136                     l1015:
   449                           
   450                           ;LAB0.c: 113:     PORTD = 0;
   451  0136  0188               	clrf	8	;volatile
   452  0137                     l1017:
   453                           
   454                           ;LAB0.c: 114:     PORTB = 0;
   455  0137  0186               	clrf	6	;volatile
   456  0138                     l1019:
   457                           
   458                           ;LAB0.c: 115:     PORTC = 0;
   459  0138  0187               	clrf	7	;volatile
   460  0139                     l1021:
   461                           
   462                           ;LAB0.c: 118:     OSCCONbits.IRCF = 0b0110;
   463  0139  1683               	bsf	3,5	;RP0=1, select bank1
   464  013A  1303               	bcf	3,6	;RP1=0, select bank1
   465  013B  080F               	movf	15,w	;volatile
   466  013C  398F               	andlw	-113
   467  013D  3860               	iorlw	96
   468  013E  008F               	movwf	15	;volatile
   469  013F                     l1023:
   470                           
   471                           ;LAB0.c: 119:     OSCCONbits.SCS = 1;
   472  013F  140F               	bsf	15,0	;volatile
   473  0140                     l1025:
   474                           
   475                           ;LAB0.c: 122:     OPTION_REGbits.T0CS = 0;
   476  0140  1281               	bcf	1,5	;volatile
   477  0141                     l1027:
   478                           
   479                           ;LAB0.c: 123:     OPTION_REGbits.T0SE = 0;
   480  0141  1201               	bcf	1,4	;volatile
   481  0142                     l1029:
   482                           
   483                           ;LAB0.c: 124:     OPTION_REGbits.PSA = 0;
   484  0142  1181               	bcf	1,3	;volatile
   485  0143                     l1031:
   486                           
   487                           ;LAB0.c: 125:     OPTION_REGbits.PS2 = 1;
   488  0143  1501               	bsf	1,2	;volatile
   489  0144                     l1033:
   490                           
   491                           ;LAB0.c: 126:     OPTION_REGbits.PS1 = 1;
   492  0144  1481               	bsf	1,1	;volatile
   493  0145                     l1035:
   494                           
   495                           ;LAB0.c: 127:     OPTION_REGbits.PS0 = 1;
   496  0145  1401               	bsf	1,0	;volatile
   497  0146                     l1037:
   498                           
   499                           ;LAB0.c: 128:     TMR0 = 61;
   500  0146  303D               	movlw	61
   501  0147  1283               	bcf	3,5	;RP0=0, select bank0
   502  0148  1303               	bcf	3,6	;RP1=0, select bank0
   503  0149  0081               	movwf	1	;volatile
   504  014A                     l1039:
   505                           
   506                           ;LAB0.c: 131:     INTCONbits.T0IF = 0;
   507  014A  110B               	bcf	11,2	;volatile
   508  014B                     l1041:
   509                           
   510                           ;LAB0.c: 132:     INTCONbits.T0IE = 1;
   511  014B  168B               	bsf	11,5	;volatile
   512  014C                     l1043:
   513                           
   514                           ;LAB0.c: 133:     INTCONbits.GIE = 1;
   515  014C  178B               	bsf	11,7	;volatile
   516  014D                     l1045:
   517                           
   518                           ;LAB0.c: 134:     PIR1bits.ADIF = 0;
   519  014D  130C               	bcf	12,6	;volatile
   520  014E                     l1047:
   521                           
   522                           ;LAB0.c: 135:     PIE1bits.ADIE = 1;
   523  014E  1683               	bsf	3,5	;RP0=1, select bank1
   524  014F  1303               	bcf	3,6	;RP1=0, select bank1
   525  0150  170C               	bsf	12,6	;volatile
   526  0151                     l1049:
   527                           
   528                           ;LAB0.c: 136:     INTCONbits.PEIE = 1;
   529  0151  170B               	bsf	11,6	;volatile
   530  0152                     l81:
   531  0152  0008               	return
   532  0153                     __end_of_setup:
   533                           
   534                           	psect	text2
   535  0035                     __ptext2:	
   536 ;; *************** function _isr *****************
   537 ;; Defined at:
   538 ;;		line 56 in file "LAB0.c"
   539 ;; Parameters:    Size  Location     Type
   540 ;;		None
   541 ;; Auto vars:     Size  Location     Type
   542 ;;		None
   543 ;; Return value:  Size  Location     Type
   544 ;;                  1    wreg      void 
   545 ;; Registers used:
   546 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   547 ;; Tracked objects:
   548 ;;		On entry : 0/0
   549 ;;		On exit  : 0/0
   550 ;;		Unchanged: 0/0
   551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   552 ;;      Params:         0       0       0       0       0
   553 ;;      Locals:         0       0       0       0       0
   554 ;;      Temps:          4       0       0       0       0
   555 ;;      Totals:         4       0       0       0       0
   556 ;;Total ram usage:        4 bytes
   557 ;; Hardware stack levels used: 1
   558 ;; Hardware stack levels required when called: 1
   559 ;; This function calls:
   560 ;;		_tabla
   561 ;;		_tmr0
   562 ;; This function is called by:
   563 ;;		Interrupt level 1
   564 ;; This function uses a non-reentrant model
   565 ;;
   566                           
   567                           
   568                           ;psect for function _isr
   569  0035                     _isr:
   570  0035                     i1l951:
   571                           
   572                           ;LAB0.c: 57:     if(T0IF){
   573  0035  1D0B               	btfss	11,2	;volatile
   574  0036  2838               	goto	u9_21
   575  0037  2839               	goto	u9_20
   576  0038                     u9_21:
   577  0038  28BB               	goto	i1l70
   578  0039                     u9_20:
   579  0039                     i1l953:
   580                           
   581                           ;LAB0.c: 58:         if(cuenta_atras == 1){
   582  0039  037A               	decf	_cuenta_atras,w
   583  003A  047B               	iorwf	_cuenta_atras+1,w
   584  003B  1D03               	btfss	3,2
   585  003C  283E               	goto	u10_21
   586  003D  283F               	goto	u10_20
   587  003E                     u10_21:
   588  003E  28BB               	goto	i1l70
   589  003F                     u10_20:
   590  003F                     i1l955:
   591                           
   592                           ;LAB0.c: 59:             if(timer_iniciado == 0){
   593  003F  0876               	movf	_timer_iniciado,w
   594  0040  0477               	iorwf	_timer_iniciado+1,w
   595  0041  1D03               	btfss	3,2
   596  0042  2844               	goto	u11_21
   597  0043  2845               	goto	u11_20
   598  0044                     u11_21:
   599  0044  284D               	goto	i1l961
   600  0045                     u11_20:
   601  0045                     i1l60:
   602  0045  1C09               	btfss	9,0	;volatile
   603  0046  2848               	goto	u12_21
   604  0047  2849               	goto	u12_20
   605  0048                     u12_21:
   606  0048  2845               	goto	i1l60
   607  0049                     u12_20:
   608  0049                     i1l959:
   609                           
   610                           ;LAB0.c: 61:                 timer_iniciado = 1;
   611  0049  3001               	movlw	1
   612  004A  00F6               	movwf	_timer_iniciado
   613  004B  3000               	movlw	0
   614  004C  00F7               	movwf	_timer_iniciado+1
   615  004D                     i1l961:
   616                           
   617                           ;LAB0.c: 63:             tmr0();
   618  004D  120A  118A  215C  120A  118A  	fcall	_tmr0
   619  0052                     i1l963:
   620                           
   621                           ;LAB0.c: 64:             cont ++;
   622  0052  3001               	movlw	1
   623  0053  07F8               	addwf	_cont,f
   624  0054  1803               	skipnc
   625  0055  0AF9               	incf	_cont+1,f
   626  0056  3000               	movlw	0
   627  0057  07F9               	addwf	_cont+1,f
   628  0058                     i1l965:
   629                           
   630                           ;LAB0.c: 65:             if(cont == 20){
   631  0058  3014               	movlw	20
   632  0059  0678               	xorwf	_cont,w
   633  005A  0479               	iorwf	_cont+1,w
   634  005B  1D03               	btfss	3,2
   635  005C  285E               	goto	u13_21
   636  005D  285F               	goto	u13_20
   637  005E                     u13_21:
   638  005E  286A               	goto	i1l969
   639  005F                     u13_20:
   640  005F                     i1l967:
   641                           
   642                           ;LAB0.c: 66:                 PORTD = 1;
   643  005F  3001               	movlw	1
   644  0060  1283               	bcf	3,5	;RP0=0, select bank0
   645  0061  1303               	bcf	3,6	;RP1=0, select bank0
   646  0062  0088               	movwf	8	;volatile
   647                           
   648                           ;LAB0.c: 67:                 cont_display -= 1;
   649  0063  30FF               	movlw	255
   650  0064  07FC               	addwf	_cont_display,f
   651  0065  1803               	skipnc
   652  0066  0AFD               	incf	_cont_display+1,f
   653  0067  30FF               	movlw	255
   654  0068  07FD               	addwf	_cont_display+1,f
   655                           
   656                           ;LAB0.c: 68:             }
   657  0069  28AE               	goto	i1l987
   658  006A                     i1l969:
   659  006A  3028               	movlw	40
   660  006B  0678               	xorwf	_cont,w
   661  006C  0479               	iorwf	_cont+1,w
   662  006D  1D03               	btfss	3,2
   663  006E  2870               	goto	u14_21
   664  006F  2871               	goto	u14_20
   665  0070                     u14_21:
   666  0070  287C               	goto	i1l973
   667  0071                     u14_20:
   668  0071                     i1l971:
   669                           
   670                           ;LAB0.c: 70:                 PORTD = 3;
   671  0071  3003               	movlw	3
   672  0072  1283               	bcf	3,5	;RP0=0, select bank0
   673  0073  1303               	bcf	3,6	;RP1=0, select bank0
   674  0074  0088               	movwf	8	;volatile
   675                           
   676                           ;LAB0.c: 71:                 cont_display -= 1;
   677  0075  30FF               	movlw	255
   678  0076  07FC               	addwf	_cont_display,f
   679  0077  1803               	skipnc
   680  0078  0AFD               	incf	_cont_display+1,f
   681  0079  30FF               	movlw	255
   682  007A  07FD               	addwf	_cont_display+1,f
   683                           
   684                           ;LAB0.c: 72:             }
   685  007B  28AE               	goto	i1l987
   686  007C                     i1l973:
   687  007C  0879               	movf	_cont+1,w
   688  007D  3A80               	xorlw	128
   689  007E  00FF               	movwf	btemp+1
   690  007F  3080               	movlw	128
   691  0080  027F               	subwf	btemp+1,w
   692  0081  1D03               	skipz
   693  0082  2885               	goto	u15_25
   694  0083  303C               	movlw	60
   695  0084  0278               	subwf	_cont,w
   696  0085                     u15_25:
   697  0085  1C03               	skipc
   698  0086  2888               	goto	u15_21
   699  0087  2889               	goto	u15_20
   700  0088                     u15_21:
   701  0088  289A               	goto	i1l983
   702  0089                     u15_20:
   703  0089                     i1l975:
   704                           
   705                           ;LAB0.c: 74:                 PORTD = 7;
   706  0089  3007               	movlw	7
   707  008A  1283               	bcf	3,5	;RP0=0, select bank0
   708  008B  1303               	bcf	3,6	;RP1=0, select bank0
   709  008C  0088               	movwf	8	;volatile
   710                           
   711                           ;LAB0.c: 75:                 cont_display -= 1;
   712  008D  30FF               	movlw	255
   713  008E  07FC               	addwf	_cont_display,f
   714  008F  1803               	skipnc
   715  0090  0AFD               	incf	_cont_display+1,f
   716  0091  30FF               	movlw	255
   717  0092  07FD               	addwf	_cont_display+1,f
   718  0093                     i1l977:
   719                           
   720                           ;LAB0.c: 76:                 cont = 0;
   721  0093  01F8               	clrf	_cont
   722  0094  01F9               	clrf	_cont+1
   723  0095                     i1l979:
   724                           
   725                           ;LAB0.c: 77:                 cont_display = 0;
   726  0095  01FC               	clrf	_cont_display
   727  0096  01FD               	clrf	_cont_display+1
   728  0097                     i1l981:
   729                           
   730                           ;LAB0.c: 78:                 cuenta_atras = 0;
   731  0097  01FA               	clrf	_cuenta_atras
   732  0098  01FB               	clrf	_cuenta_atras+1
   733                           
   734                           ;LAB0.c: 79:             }
   735  0099  28AE               	goto	i1l987
   736  009A                     i1l983:
   737  009A  0879               	movf	_cont+1,w
   738  009B  3A80               	xorlw	128
   739  009C  00FF               	movwf	btemp+1
   740  009D  3080               	movlw	128
   741  009E  027F               	subwf	btemp+1,w
   742  009F  1D03               	skipz
   743  00A0  28A3               	goto	u16_25
   744  00A1  3051               	movlw	81
   745  00A2  0278               	subwf	_cont,w
   746  00A3                     u16_25:
   747  00A3  1C03               	skipc
   748  00A4  28A6               	goto	u16_21
   749  00A5  28A7               	goto	u16_20
   750  00A6                     u16_21:
   751  00A6  28AE               	goto	i1l66
   752  00A7                     u16_20:
   753  00A7                     i1l985:
   754                           
   755                           ;LAB0.c: 81:                 cont = 0;
   756  00A7  01F8               	clrf	_cont
   757  00A8  01F9               	clrf	_cont+1
   758                           
   759                           ;LAB0.c: 82:                 cont_display = 0;
   760  00A9  01FC               	clrf	_cont_display
   761  00AA  01FD               	clrf	_cont_display+1
   762                           
   763                           ;LAB0.c: 83:                 cuenta_atras = 0;
   764  00AB  01FA               	clrf	_cuenta_atras
   765  00AC  01FB               	clrf	_cuenta_atras+1
   766  00AD  28AE               	goto	i1l987
   767  00AE                     i1l66:
   768  00AE                     i1l987:
   769                           
   770                           ;LAB0.c: 85:             PORTC = tabla(cont_display);
   771  00AE  087D               	movf	_cont_display+1,w
   772  00AF  00F1               	movwf	tabla@a+1
   773  00B0  087C               	movf	_cont_display,w
   774  00B1  00F0               	movwf	tabla@a
   775  00B2  120A  118A  20C6  120A  118A  	fcall	_tabla
   776  00B7  0870               	movf	?_tabla,w
   777  00B8  1283               	bcf	3,5	;RP0=0, select bank0
   778  00B9  1303               	bcf	3,6	;RP1=0, select bank0
   779  00BA  0087               	movwf	7	;volatile
   780  00BB                     i1l70:
   781  00BB  0875               	movf	??_isr+3,w
   782  00BC  00FF               	movwf	btemp+1
   783  00BD  0874               	movf	??_isr+2,w
   784  00BE  008A               	movwf	10
   785  00BF  0873               	movf	??_isr+1,w
   786  00C0  0084               	movwf	4
   787  00C1  0E72               	swapf	??_isr,w
   788  00C2  0083               	movwf	3
   789  00C3  0EFE               	swapf	btemp,f
   790  00C4  0E7E               	swapf	btemp,w
   791  00C5  0009               	retfie
   792  00C6                     __end_of_isr:
   793                           
   794                           	psect	intentry
   795  0004                     __pintentry:	
   796                           ;incstack = 0
   797                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   798                           
   799  0004                     interrupt_function:
   800  007E                     saved_w	set	btemp
   801  0004  00FE               	movwf	btemp
   802  0005  0E03               	swapf	3,w
   803  0006  00F2               	movwf	??_isr
   804  0007  0804               	movf	4,w
   805  0008  00F3               	movwf	??_isr+1
   806  0009  080A               	movf	10,w
   807  000A  00F4               	movwf	??_isr+2
   808  000B  1283               	bcf	3,5	;RP0=0, select bank0
   809  000C  1303               	bcf	3,6	;RP1=0, select bank0
   810  000D  087F               	movf	btemp+1,w
   811  000E  00F5               	movwf	??_isr+3
   812  000F  120A  118A  2835   	ljmp	_isr
   813                           
   814                           	psect	text3
   815  015C                     __ptext3:	
   816 ;; *************** function _tmr0 *****************
   817 ;; Defined at:
   818 ;;		line 141 in file "LAB0.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;		None
   821 ;; Auto vars:     Size  Location     Type
   822 ;;		None
   823 ;; Return value:  Size  Location     Type
   824 ;;                  1    wreg      void 
   825 ;; Registers used:
   826 ;;		wreg
   827 ;; Tracked objects:
   828 ;;		On entry : 0/0
   829 ;;		On exit  : 0/0
   830 ;;		Unchanged: 0/0
   831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   832 ;;      Params:         0       0       0       0       0
   833 ;;      Locals:         0       0       0       0       0
   834 ;;      Temps:          0       0       0       0       0
   835 ;;      Totals:         0       0       0       0       0
   836 ;;Total ram usage:        0 bytes
   837 ;; Hardware stack levels used: 1
   838 ;; This function calls:
   839 ;;		Nothing
   840 ;; This function is called by:
   841 ;;		_isr
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           
   846                           ;psect for function _tmr0
   847  015C                     _tmr0:
   848  015C                     i1l693:	
   849                           ;incstack = 0
   850                           ; Regs used in _tmr0: [wreg]
   851                           
   852                           
   853                           ;LAB0.c: 142:     INTCONbits.T0IF = 0;
   854  015C  110B               	bcf	11,2	;volatile
   855  015D                     i1l695:
   856                           
   857                           ;LAB0.c: 143:     TMR0 = 61;
   858  015D  303D               	movlw	61
   859  015E  1283               	bcf	3,5	;RP0=0, select bank0
   860  015F  1303               	bcf	3,6	;RP1=0, select bank0
   861  0160  0081               	movwf	1	;volatile
   862  0161                     i1l84:
   863  0161  0008               	return
   864  0162                     __end_of_tmr0:
   865                           
   866                           	psect	text4
   867  00C6                     __ptext4:	
   868 ;; *************** function _tabla *****************
   869 ;; Defined at:
   870 ;;		line 147 in file "LAB0.c"
   871 ;; Parameters:    Size  Location     Type
   872 ;;  a               2    0[COMMON] int 
   873 ;; Auto vars:     Size  Location     Type
   874 ;;		None
   875 ;; Return value:  Size  Location     Type
   876 ;;                  2    0[COMMON] int 
   877 ;; Registers used:
   878 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   879 ;; Tracked objects:
   880 ;;		On entry : 0/0
   881 ;;		On exit  : 0/0
   882 ;;		Unchanged: 0/0
   883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   884 ;;      Params:         2       0       0       0       0
   885 ;;      Locals:         0       0       0       0       0
   886 ;;      Temps:          0       0       0       0       0
   887 ;;      Totals:         2       0       0       0       0
   888 ;;Total ram usage:        2 bytes
   889 ;; Hardware stack levels used: 1
   890 ;; This function calls:
   891 ;;		Nothing
   892 ;; This function is called by:
   893 ;;		_isr
   894 ;; This function uses a non-reentrant model
   895 ;;
   896                           
   897                           
   898                           ;psect for function _tabla
   899  00C6                     _tabla:
   900  00C6                     i1l877:	
   901                           ;incstack = 0
   902                           ; Regs used in _tabla: [wreg-fsr0h+status,2+status,0]
   903                           
   904                           
   905                           ;LAB0.c: 148:     switch (a){
   906  00C6  28FE               	goto	i1l945
   907  00C7                     i1l879:
   908                           
   909                           ;LAB0.c: 150:             return 0b00111111;
   910  00C7  303F               	movlw	63
   911  00C8  00F0               	movwf	?_tabla
   912  00C9  3000               	movlw	0
   913  00CA  00F1               	movwf	?_tabla+1
   914  00CB  2926               	goto	i1l89
   915  00CC                     i1l885:
   916                           
   917                           ;LAB0.c: 153:             return 0b00000110;
   918  00CC  3006               	movlw	6
   919  00CD  00F0               	movwf	?_tabla
   920  00CE  3000               	movlw	0
   921  00CF  00F1               	movwf	?_tabla+1
   922  00D0  2926               	goto	i1l89
   923  00D1                     i1l891:
   924                           
   925                           ;LAB0.c: 156:             return 0b01011011;
   926  00D1  305B               	movlw	91
   927  00D2  00F0               	movwf	?_tabla
   928  00D3  3000               	movlw	0
   929  00D4  00F1               	movwf	?_tabla+1
   930  00D5  2926               	goto	i1l89
   931  00D6                     i1l897:
   932                           
   933                           ;LAB0.c: 159:             return 0b01001111;
   934  00D6  304F               	movlw	79
   935  00D7  00F0               	movwf	?_tabla
   936  00D8  3000               	movlw	0
   937  00D9  00F1               	movwf	?_tabla+1
   938  00DA  2926               	goto	i1l89
   939  00DB                     i1l903:
   940                           
   941                           ;LAB0.c: 162:             return 0b01100110;
   942  00DB  3066               	movlw	102
   943  00DC  00F0               	movwf	?_tabla
   944  00DD  3000               	movlw	0
   945  00DE  00F1               	movwf	?_tabla+1
   946  00DF  2926               	goto	i1l89
   947  00E0                     i1l909:
   948                           
   949                           ;LAB0.c: 165:             return 0b01101101;
   950  00E0  306D               	movlw	109
   951  00E1  00F0               	movwf	?_tabla
   952  00E2  3000               	movlw	0
   953  00E3  00F1               	movwf	?_tabla+1
   954  00E4  2926               	goto	i1l89
   955  00E5                     i1l915:
   956                           
   957                           ;LAB0.c: 168:             return 0b01111101;
   958  00E5  307D               	movlw	125
   959  00E6  00F0               	movwf	?_tabla
   960  00E7  3000               	movlw	0
   961  00E8  00F1               	movwf	?_tabla+1
   962  00E9  2926               	goto	i1l89
   963  00EA                     i1l921:
   964                           
   965                           ;LAB0.c: 171:             return 0b00000111;
   966  00EA  3007               	movlw	7
   967  00EB  00F0               	movwf	?_tabla
   968  00EC  3000               	movlw	0
   969  00ED  00F1               	movwf	?_tabla+1
   970  00EE  2926               	goto	i1l89
   971  00EF                     i1l927:
   972                           
   973                           ;LAB0.c: 174:             return 0b01111111;
   974  00EF  307F               	movlw	127
   975  00F0  00F0               	movwf	?_tabla
   976  00F1  3000               	movlw	0
   977  00F2  00F1               	movwf	?_tabla+1
   978  00F3  2926               	goto	i1l89
   979  00F4                     i1l933:
   980                           
   981                           ;LAB0.c: 177:             return 0b01101111;
   982  00F4  306F               	movlw	111
   983  00F5  00F0               	movwf	?_tabla
   984  00F6  3000               	movlw	0
   985  00F7  00F1               	movwf	?_tabla+1
   986  00F8  2926               	goto	i1l89
   987  00F9                     i1l939:
   988                           
   989                           ;LAB0.c: 180:             return 0b01111011;
   990  00F9  307B               	movlw	123
   991  00FA  00F0               	movwf	?_tabla
   992  00FB  3000               	movlw	0
   993  00FC  00F1               	movwf	?_tabla+1
   994  00FD  2926               	goto	i1l89
   995  00FE                     i1l945:
   996                           
   997                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   998                           ; Switch size 1, requested type "simple"
   999                           ; Number of cases is 1, Range of values is 0 to 0
  1000                           ; switch strategies available:
  1001                           ; Name         Instructions Cycles
  1002                           ; simple_byte            4     3 (average)
  1003                           ; direct_byte           11     8 (fixed)
  1004                           ; jumptable            260     6 (fixed)
  1005                           ;	Chosen strategy is simple_byte
  1006  00FE  0871               	movf	tabla@a+1,w
  1007  00FF  3A00               	xorlw	0	; case 0
  1008  0100  1903               	skipnz
  1009  0101  2903               	goto	i1l1075
  1010  0102  2926               	goto	i1l89
  1011  0103                     i1l1075:
  1012                           
  1013                           ; Switch size 1, requested type "simple"
  1014                           ; Number of cases is 11, Range of values is 0 to 10
  1015                           ; switch strategies available:
  1016                           ; Name         Instructions Cycles
  1017                           ; simple_byte           34    18 (average)
  1018                           ; direct_byte           41     8 (fixed)
  1019                           ; jumptable            260     6 (fixed)
  1020                           ;	Chosen strategy is simple_byte
  1021  0103  0870               	movf	tabla@a,w
  1022  0104  3A00               	xorlw	0	; case 0
  1023  0105  1903               	skipnz
  1024  0106  28C7               	goto	i1l879
  1025  0107  3A01               	xorlw	1	; case 1
  1026  0108  1903               	skipnz
  1027  0109  28CC               	goto	i1l885
  1028  010A  3A03               	xorlw	3	; case 2
  1029  010B  1903               	skipnz
  1030  010C  28D1               	goto	i1l891
  1031  010D  3A01               	xorlw	1	; case 3
  1032  010E  1903               	skipnz
  1033  010F  28D6               	goto	i1l897
  1034  0110  3A07               	xorlw	7	; case 4
  1035  0111  1903               	skipnz
  1036  0112  28DB               	goto	i1l903
  1037  0113  3A01               	xorlw	1	; case 5
  1038  0114  1903               	skipnz
  1039  0115  28E0               	goto	i1l909
  1040  0116  3A03               	xorlw	3	; case 6
  1041  0117  1903               	skipnz
  1042  0118  28E5               	goto	i1l915
  1043  0119  3A01               	xorlw	1	; case 7
  1044  011A  1903               	skipnz
  1045  011B  28EA               	goto	i1l921
  1046  011C  3A0F               	xorlw	15	; case 8
  1047  011D  1903               	skipnz
  1048  011E  28EF               	goto	i1l927
  1049  011F  3A01               	xorlw	1	; case 9
  1050  0120  1903               	skipnz
  1051  0121  28F4               	goto	i1l933
  1052  0122  3A03               	xorlw	3	; case 10
  1053  0123  1903               	skipnz
  1054  0124  28F9               	goto	i1l939
  1055  0125  2926               	goto	i1l89
  1056  0126                     i1l89:
  1057  0126  0008               	return
  1058  0127                     __end_of_tabla:
  1059  007E                     btemp	set	126	;btemp
  1060  007E                     wtemp0	set	126
  1061                           
  1062                           	psect	config
  1063                           
  1064                           ;Config register CONFIG1 @ 0x2007
  1065                           ;	Oscillator Selection bits
  1066                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1067                           ;	Watchdog Timer Enable bit
  1068                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1069                           ;	Power-up Timer Enable bit
  1070                           ;	PWRTE = OFF, PWRT disabled
  1071                           ;	RE3/MCLR pin function select bit
  1072                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1073                           ;	Code Protection bit
  1074                           ;	CP = OFF, Program memory code protection is disabled
  1075                           ;	Data Code Protection bit
  1076                           ;	CPD = OFF, Data memory code protection is disabled
  1077                           ;	Brown Out Reset Selection bits
  1078                           ;	BOREN = OFF, BOR disabled
  1079                           ;	Internal External Switchover bit
  1080                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1081                           ;	Fail-Safe Clock Monitor Enabled bit
  1082                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1083                           ;	Low Voltage Programming Enable bit
  1084                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1085                           ;	In-Circuit Debugger Mode bit
  1086                           ;	DEBUG = 0x1, unprogrammed default
  1087  2007                     	org	8199
  1088  2007  20D4               	dw	8404
  1089                           
  1090                           ;Config register CONFIG2 @ 0x2008
  1091                           ;	Brown-out Reset Selection bit
  1092                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1093                           ;	Flash Program Memory Self Write Enable bits
  1094                           ;	WRT = OFF, Write protection off
  1095  2008                     	org	8200
  1096  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      14
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_tabla

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  4     4      0      98
                                              2 COMMON     4     4      0
                              _tabla
                               _tmr0
 ---------------------------------------------------------------------------------
 (3) _tmr0                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _tabla                                                2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _isr (ROOT)
   _tabla
   _tmr0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       E      12        0.0%
ABS                  0      0       E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jan 19 21:28:03 2022

                     l81 0152                       l75 0158                       l76 0158  
                    _isr 0035                      fsr0 0004                     l1011 0131  
                   l1021 0139                     l1013 0133                     l1031 0143  
                   l1023 013F                     l1015 0136                     l1041 014B  
                   l1033 0144                     l1025 0140                     l1017 0137  
                   l1009 0127                     l1043 014C                     l1035 0145  
                   l1027 0141                     l1019 0138                     l1045 014D  
                   l1037 0146                     l1029 0142                     l1053 0153  
                   l1047 014E                     l1039 014A                     l1049 0151  
                   ?_isr 0070                     _T0IF 005A                     i1l60 0045  
                   i1l70 00BB                     i1l66 00AE                     i1l84 0161  
                   i1l89 0126                     _TMR0 0001                     u9_20 0039  
                   u9_21 0038                     _cont 0078                     _main 0153  
                   _tmr0 015C                     btemp 007E                     start 0012  
                  ??_isr 0072                    ?_main 0070                    ?_tmr0 0070  
                  _ANSEL 0188                    i1l903 00DB                    i1l921 00EA  
                  i1l915 00E5                    i1l933 00F4                    i1l909 00E0  
                  i1l693 015C                    i1l927 00EF                    i1l695 015D  
                  i1l951 0035                    i1l945 00FE                    i1l961 004D  
                  i1l953 0039                    i1l939 00F9                    i1l891 00D1  
                  i1l971 0071                    i1l963 0052                    i1l955 003F  
                  i1l885 00CC                    i1l877 00C6                    i1l981 0097  
                  i1l973 007C                    i1l965 0058                    i1l879 00C7  
                  i1l975 0089                    i1l983 009A                    i1l967 005F  
                  i1l959 0049                    i1l897 00D6                    i1l985 00A7  
                  i1l977 0093                    i1l969 006A                    i1l979 0095  
                  i1l987 00AE                    u10_20 003F                    u10_21 003E  
                  u11_20 0045                    u11_21 0044                    u12_20 0049  
                  u12_21 0048                    u13_20 005F                    u13_21 005E  
                  u14_20 0071                    u14_21 0070                    u15_20 0089  
                  u15_21 0088                    u15_25 0085                    u16_20 00A7  
                  u16_21 00A6                    u16_25 00A3                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _tabla 00C6  
                  _setup 0127                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0015             __end_of_main 015C  
           __end_of_tmr0 0162                   ??_main 0000                   ??_tmr0 0070  
                 ?_tabla 0070                   ?_setup 0070                   _ANSELH 0189  
                 i1l1075 0103                   tabla@a 0070             __pdataCOMMON 007A  
                 saved_w 007E  __end_of__initialization 0031           __pcstackCOMMON 0070  
          __end_of_tabla 0127            __end_of_setup 0153           _OPTION_REGbits 0081  
                ??_tabla 0072                  ??_setup 0000               __pmaintext 0153  
             __pintentry 0004                  __ptext1 0127                  __ptext2 0035  
                __ptext3 015C                  __ptext4 00C6             __size_of_isr 0091  
   end_of_initialization 0031                _PORTEbits 0009             _cont_display 007C  
           _cuenta_atras 007A            __pidataCOMMON 0162      start_initialization 0015  
            __end_of_isr 00C6              __pbssCOMMON 0076                ___latbits 0002  
          __pcstackBANK0 0000           __size_of_tabla 0061           __size_of_setup 002C  
      interrupt_function 0004                 _PIE1bits 008C                 _PIR1bits 000C  
         _timer_iniciado 0076            __size_of_main 0009            __size_of_tmr0 0006  
             _INTCONbits 000B                 intlevel1 0000               _OSCCONbits 008F  
