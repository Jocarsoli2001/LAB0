

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Jan 20 09:56:08 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212                           
   213                           	psect	idataCOMMON
   214  0199                     __pidataCOMMON:
   215                           
   216                           ;initializer for _cuenta_atras
   217  0199  3401               	retlw	1
   218  019A  3400               	retlw	0
   219                           
   220                           	psect	idataBANK0
   221  019B                     __pidataBANK0:
   222                           
   223                           ;initializer for _cont_display
   224  019B  3403               	retlw	3
   225  019C  3400               	retlw	0
   226  000B                     _INTCONbits	set	11
   227  0001                     _TMR0	set	1
   228  0008                     _PORTDbits	set	8
   229  0007                     _PORTC	set	7
   230  0006                     _PORTB	set	6
   231  0005                     _PORTA	set	5
   232  0008                     _PORTD	set	8
   233  0009                     _PORTEbits	set	9
   234  005A                     _T0IF	set	90
   235  0081                     _OPTION_REGbits	set	129
   236  008F                     _OSCCONbits	set	143
   237  0089                     _TRISE	set	137
   238  0088                     _TRISD	set	136
   239  0087                     _TRISC	set	135
   240  0086                     _TRISB	set	134
   241  0085                     _TRISA	set	133
   242  0189                     _ANSELH	set	393
   243  0188                     _ANSEL	set	392
   244                           
   245                           	psect	cinit
   246  0015                     start_initialization:	
   247                           ; #config settings
   248                           
   249  0015                     __initialization:
   250                           
   251                           ; Initialize objects allocated to BANK0
   252  0015  120A  118A  219B  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   253  001A  00A2               	movwf	__pdataBANK0& (0+127)
   254  001B  120A  118A  219C  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   255  0020  00A3               	movwf	(__pdataBANK0+1)& (0+127)
   256                           
   257                           ; Initialize objects allocated to COMMON
   258  0021  120A  118A  2199  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   259  0026  00FB               	movwf	__pdataCOMMON& (0+127)
   260  0027  120A  118A  219A  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   261  002C  00FC               	movwf	(__pdataCOMMON+1)& (0+127)
   262                           
   263                           ; Clear objects allocated to BANK0
   264  002D  01A0               	clrf	__pbssBANK0& (0+127)
   265  002E  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   266                           
   267                           ; Clear objects allocated to COMMON
   268  002F  01F7               	clrf	__pbssCOMMON& (0+127)
   269  0030  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   270  0031  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   271  0032  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   272  0033                     end_of_initialization:	
   273                           ;End of C runtime variable initialization code
   274                           
   275  0033                     __end_of__initialization:
   276  0033  0183               	clrf	3
   277  0034  120A  118A  298A   	ljmp	_main	;jump to C main() function
   278                           
   279                           	psect	bssCOMMON
   280  0077                     __pbssCOMMON:
   281  0077                     _inicio_carrera:
   282  0077                     	ds	2
   283  0079                     _cont:
   284  0079                     	ds	2
   285                           
   286                           	psect	dataCOMMON
   287  007B                     __pdataCOMMON:
   288  007B                     _cuenta_atras:
   289  007B                     	ds	2
   290                           
   291                           	psect	bssBANK0
   292  0020                     __pbssBANK0:
   293  0020                     _timer_iniciado:
   294  0020                     	ds	2
   295                           
   296                           	psect	dataBANK0
   297  0022                     __pdataBANK0:
   298  0022                     _cont_display:
   299  0022                     	ds	2
   300                           
   301                           	psect	cstackCOMMON
   302  0070                     __pcstackCOMMON:
   303  0070                     ?_tmr0:
   304  0070                     ??_tmr0:	
   305                           ; 1 bytes @ 0x0
   306                           
   307  0070                     ?_setup:	
   308                           ; 1 bytes @ 0x0
   309                           
   310  0070                     ?_isr:	
   311                           ; 1 bytes @ 0x0
   312                           
   313  0070                     ?_main:	
   314                           ; 1 bytes @ 0x0
   315                           
   316  0070                     ?_tabla:	
   317                           ; 1 bytes @ 0x0
   318                           
   319  0070                     tabla@a:	
   320                           ; 2 bytes @ 0x0
   321                           
   322                           
   323                           ; 2 bytes @ 0x0
   324  0070                     	ds	2
   325  0072                     ??_tabla:
   326  0072                     ??_isr:	
   327                           ; 1 bytes @ 0x2
   328                           
   329                           
   330                           ; 1 bytes @ 0x2
   331  0072                     	ds	5
   332                           
   333                           	psect	cstackBANK0
   334  0000                     __pcstackBANK0:
   335  0000                     ??_setup:
   336  0000                     ??_main:	
   337                           ; 1 bytes @ 0x0
   338                           
   339                           
   340                           	psect	maintext
   341  018A                     __pmaintext:	
   342                           ; 1 bytes @ 0x0
   343 ;;
   344 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   345 ;;
   346 ;; *************** function _main *****************
   347 ;; Defined at:
   348 ;;		line 111 in file "LAB0.c"
   349 ;; Parameters:    Size  Location     Type
   350 ;;		None
   351 ;; Auto vars:     Size  Location     Type
   352 ;;		None
   353 ;; Return value:  Size  Location     Type
   354 ;;                  1    wreg      void 
   355 ;; Registers used:
   356 ;;		wreg, status,2, status,0, pclath, cstack
   357 ;; Tracked objects:
   358 ;;		On entry : B00/0
   359 ;;		On exit  : 0/0
   360 ;;		Unchanged: 0/0
   361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   362 ;;      Params:         0       0       0       0       0
   363 ;;      Locals:         0       0       0       0       0
   364 ;;      Temps:          0       0       0       0       0
   365 ;;      Totals:         0       0       0       0       0
   366 ;;Total ram usage:        0 bytes
   367 ;; Hardware stack levels required when called: 3
   368 ;; This function calls:
   369 ;;		_setup
   370 ;; This function is called by:
   371 ;;		Startup code after reset
   372 ;; This function uses a non-reentrant model
   373 ;;
   374                           
   375                           
   376                           ;psect for function _main
   377  018A                     _main:
   378  018A                     l1121:	
   379                           ;incstack = 0
   380                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   381                           
   382                           
   383                           ;LAB0.c: 112:     setup();
   384  018A  120A  118A  2162  120A  118A  	fcall	_setup
   385  018F                     l85:	
   386                           ;LAB0.c: 113:     while(1){
   387                           
   388  018F                     l86:	
   389                           ;LAB0.c: 115:     }
   390                           
   391  018F  298F               	goto	l85
   392  0190  120A  118A  2812   	ljmp	start
   393  0193                     __end_of_main:
   394                           
   395                           	psect	text1
   396  0162                     __ptext1:	
   397 ;; *************** function _setup *****************
   398 ;; Defined at:
   399 ;;		line 119 in file "LAB0.c"
   400 ;; Parameters:    Size  Location     Type
   401 ;;		None
   402 ;; Auto vars:     Size  Location     Type
   403 ;;		None
   404 ;; Return value:  Size  Location     Type
   405 ;;                  1    wreg      void 
   406 ;; Registers used:
   407 ;;		wreg, status,2, status,0
   408 ;; Tracked objects:
   409 ;;		On entry : 0/0
   410 ;;		On exit  : 0/0
   411 ;;		Unchanged: 0/0
   412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   413 ;;      Params:         0       0       0       0       0
   414 ;;      Locals:         0       0       0       0       0
   415 ;;      Temps:          0       0       0       0       0
   416 ;;      Totals:         0       0       0       0       0
   417 ;;Total ram usage:        0 bytes
   418 ;; Hardware stack levels used: 1
   419 ;; Hardware stack levels required when called: 2
   420 ;; This function calls:
   421 ;;		Nothing
   422 ;; This function is called by:
   423 ;;		_main
   424 ;; This function uses a non-reentrant model
   425 ;;
   426                           
   427                           
   428                           ;psect for function _setup
   429  0162                     _setup:
   430  0162                     l1081:	
   431                           ;incstack = 0
   432                           ; Regs used in _setup: [wreg+status,2+status,0]
   433                           
   434                           
   435                           ;LAB0.c: 122:     ANSEL = 0;
   436  0162  1683               	bsf	3,5	;RP0=1, select bank3
   437  0163  1703               	bsf	3,6	;RP1=1, select bank3
   438  0164  0188               	clrf	8	;volatile
   439                           
   440                           ;LAB0.c: 123:     ANSELH = 0;
   441  0165  0189               	clrf	9	;volatile
   442                           
   443                           ;LAB0.c: 125:     TRISA = 0;
   444  0166  1683               	bsf	3,5	;RP0=1, select bank1
   445  0167  1303               	bcf	3,6	;RP1=0, select bank1
   446  0168  0185               	clrf	5	;volatile
   447                           
   448                           ;LAB0.c: 126:     TRISB = 0;
   449  0169  0186               	clrf	6	;volatile
   450                           
   451                           ;LAB0.c: 127:     TRISC = 0;
   452  016A  0187               	clrf	7	;volatile
   453                           
   454                           ;LAB0.c: 128:     TRISD = 0;
   455  016B  0188               	clrf	8	;volatile
   456  016C                     l1083:
   457                           
   458                           ;LAB0.c: 129:     TRISE = 0b00000111;
   459  016C  3007               	movlw	7
   460  016D  0089               	movwf	9	;volatile
   461  016E                     l1085:
   462                           
   463                           ;LAB0.c: 131:     PORTA = 0;
   464  016E  1283               	bcf	3,5	;RP0=0, select bank0
   465  016F  1303               	bcf	3,6	;RP1=0, select bank0
   466  0170  0185               	clrf	5	;volatile
   467  0171                     l1087:
   468                           
   469                           ;LAB0.c: 132:     PORTD = 0;
   470  0171  0188               	clrf	8	;volatile
   471  0172                     l1089:
   472                           
   473                           ;LAB0.c: 133:     PORTB = 0;
   474  0172  0186               	clrf	6	;volatile
   475  0173                     l1091:
   476                           
   477                           ;LAB0.c: 134:     PORTC = 0;
   478  0173  0187               	clrf	7	;volatile
   479  0174                     l1093:
   480                           
   481                           ;LAB0.c: 137:     OSCCONbits.IRCF = 0b0110;
   482  0174  1683               	bsf	3,5	;RP0=1, select bank1
   483  0175  1303               	bcf	3,6	;RP1=0, select bank1
   484  0176  080F               	movf	15,w	;volatile
   485  0177  398F               	andlw	-113
   486  0178  3860               	iorlw	96
   487  0179  008F               	movwf	15	;volatile
   488  017A                     l1095:
   489                           
   490                           ;LAB0.c: 138:     OSCCONbits.SCS = 1;
   491  017A  140F               	bsf	15,0	;volatile
   492  017B                     l1097:
   493                           
   494                           ;LAB0.c: 141:     OPTION_REGbits.T0CS = 0;
   495  017B  1281               	bcf	1,5	;volatile
   496  017C                     l1099:
   497                           
   498                           ;LAB0.c: 142:     OPTION_REGbits.T0SE = 0;
   499  017C  1201               	bcf	1,4	;volatile
   500  017D                     l1101:
   501                           
   502                           ;LAB0.c: 143:     OPTION_REGbits.PSA = 0;
   503  017D  1181               	bcf	1,3	;volatile
   504  017E                     l1103:
   505                           
   506                           ;LAB0.c: 144:     OPTION_REGbits.PS2 = 1;
   507  017E  1501               	bsf	1,2	;volatile
   508  017F                     l1105:
   509                           
   510                           ;LAB0.c: 145:     OPTION_REGbits.PS1 = 1;
   511  017F  1481               	bsf	1,1	;volatile
   512  0180                     l1107:
   513                           
   514                           ;LAB0.c: 146:     OPTION_REGbits.PS0 = 1;
   515  0180  1401               	bsf	1,0	;volatile
   516  0181                     l1109:
   517                           
   518                           ;LAB0.c: 147:     TMR0 = 61;
   519  0181  303D               	movlw	61
   520  0182  1283               	bcf	3,5	;RP0=0, select bank0
   521  0183  1303               	bcf	3,6	;RP1=0, select bank0
   522  0184  0081               	movwf	1	;volatile
   523  0185                     l1111:
   524                           
   525                           ;LAB0.c: 150:     INTCONbits.T0IF = 0;
   526  0185  110B               	bcf	11,2	;volatile
   527  0186                     l1113:
   528                           
   529                           ;LAB0.c: 151:     INTCONbits.T0IE = 1;
   530  0186  168B               	bsf	11,5	;volatile
   531  0187                     l1115:
   532                           
   533                           ;LAB0.c: 152:     INTCONbits.GIE = 1;
   534  0187  178B               	bsf	11,7	;volatile
   535  0188                     l1117:
   536                           
   537                           ;LAB0.c: 153:     INTCONbits.PEIE = 1;
   538  0188  170B               	bsf	11,6	;volatile
   539  0189                     l91:
   540  0189  0008               	return
   541  018A                     __end_of_setup:
   542                           
   543                           	psect	text2
   544  0037                     __ptext2:	
   545 ;; *************** function _isr *****************
   546 ;; Defined at:
   547 ;;		line 55 in file "LAB0.c"
   548 ;; Parameters:    Size  Location     Type
   549 ;;		None
   550 ;; Auto vars:     Size  Location     Type
   551 ;;		None
   552 ;; Return value:  Size  Location     Type
   553 ;;                  1    wreg      void 
   554 ;; Registers used:
   555 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   556 ;; Tracked objects:
   557 ;;		On entry : 0/0
   558 ;;		On exit  : 0/0
   559 ;;		Unchanged: 0/0
   560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   561 ;;      Params:         0       0       0       0       0
   562 ;;      Locals:         0       0       0       0       0
   563 ;;      Temps:          5       0       0       0       0
   564 ;;      Totals:         5       0       0       0       0
   565 ;;Total ram usage:        5 bytes
   566 ;; Hardware stack levels used: 1
   567 ;; Hardware stack levels required when called: 1
   568 ;; This function calls:
   569 ;;		_tabla
   570 ;;		_tmr0
   571 ;; This function is called by:
   572 ;;		Interrupt level 1
   573 ;; This function uses a non-reentrant model
   574 ;;
   575                           
   576                           
   577                           ;psect for function _isr
   578  0037                     _isr:
   579  0037                     i1l993:
   580                           
   581                           ;LAB0.c: 56:     if(T0IF){
   582  0037  1D0B               	btfss	11,2	;volatile
   583  0038  283A               	goto	u19_21
   584  0039  283B               	goto	u19_20
   585  003A                     u19_21:
   586  003A  28F6               	goto	i1l80
   587  003B                     u19_20:
   588  003B                     i1l995:
   589                           
   590                           ;LAB0.c: 59:         if(cuenta_atras == 1){
   591  003B  037B               	decf	_cuenta_atras,w
   592  003C  047C               	iorwf	_cuenta_atras+1,w
   593  003D  1D03               	btfss	3,2
   594  003E  2840               	goto	u20_21
   595  003F  2841               	goto	u20_20
   596  0040                     u20_21:
   597  0040  28AD               	goto	i1l1029
   598  0041                     u20_20:
   599  0041                     i1l997:
   600                           
   601                           ;LAB0.c: 60:             if(timer_iniciado == 0){
   602  0041  0820               	movf	_timer_iniciado,w
   603  0042  0421               	iorwf	_timer_iniciado+1,w
   604  0043  1D03               	btfss	3,2
   605  0044  2846               	goto	u21_21
   606  0045  2847               	goto	u21_20
   607  0046                     u21_21:
   608  0046  284F               	goto	i1l1003
   609  0047                     u21_20:
   610  0047                     i1l60:
   611  0047  1C09               	btfss	9,0	;volatile
   612  0048  284A               	goto	u22_21
   613  0049  284B               	goto	u22_20
   614  004A                     u22_21:
   615  004A  2847               	goto	i1l60
   616  004B                     u22_20:
   617  004B                     i1l1001:
   618                           
   619                           ;LAB0.c: 62:                 timer_iniciado = 1;
   620  004B  3001               	movlw	1
   621  004C  00A0               	movwf	_timer_iniciado
   622  004D  3000               	movlw	0
   623  004E  00A1               	movwf	_timer_iniciado+1
   624  004F                     i1l1003:
   625                           
   626                           ;LAB0.c: 64:             tmr0();
   627  004F  120A  118A  2193  120A  118A  	fcall	_tmr0
   628  0054                     i1l1005:
   629                           
   630                           ;LAB0.c: 65:             cont ++;
   631  0054  3001               	movlw	1
   632  0055  07F9               	addwf	_cont,f
   633  0056  1803               	skipnc
   634  0057  0AFA               	incf	_cont+1,f
   635  0058  3000               	movlw	0
   636  0059  07FA               	addwf	_cont+1,f
   637  005A                     i1l1007:
   638                           
   639                           ;LAB0.c: 66:             if(cont == 20){
   640  005A  3014               	movlw	20
   641  005B  0679               	xorwf	_cont,w
   642  005C  047A               	iorwf	_cont+1,w
   643  005D  1D03               	btfss	3,2
   644  005E  2860               	goto	u23_21
   645  005F  2861               	goto	u23_20
   646  0060                     u23_21:
   647  0060  286C               	goto	i1l1011
   648  0061                     u23_20:
   649  0061                     i1l1009:
   650                           
   651                           ;LAB0.c: 67:                 PORTD = 1;
   652  0061  3001               	movlw	1
   653  0062  1283               	bcf	3,5	;RP0=0, select bank0
   654  0063  1303               	bcf	3,6	;RP1=0, select bank0
   655  0064  0088               	movwf	8	;volatile
   656                           
   657                           ;LAB0.c: 68:                 cont_display -= 1;
   658  0065  30FF               	movlw	255
   659  0066  07A2               	addwf	_cont_display,f
   660  0067  1803               	skipnc
   661  0068  0AA3               	incf	_cont_display+1,f
   662  0069  30FF               	movlw	255
   663  006A  07A3               	addwf	_cont_display+1,f
   664                           
   665                           ;LAB0.c: 69:             }
   666  006B  289D               	goto	i1l1027
   667  006C                     i1l1011:
   668  006C  3028               	movlw	40
   669  006D  0679               	xorwf	_cont,w
   670  006E  047A               	iorwf	_cont+1,w
   671  006F  1D03               	btfss	3,2
   672  0070  2872               	goto	u24_21
   673  0071  2873               	goto	u24_20
   674  0072                     u24_21:
   675  0072  2882               	goto	i1l1015
   676  0073                     u24_20:
   677  0073                     i1l1013:
   678                           
   679                           ;LAB0.c: 71:                 PORTD = 3;
   680  0073  3003               	movlw	3
   681  0074  1283               	bcf	3,5	;RP0=0, select bank0
   682  0075  1303               	bcf	3,6	;RP1=0, select bank0
   683  0076  0088               	movwf	8	;volatile
   684                           
   685                           ;LAB0.c: 72:                 cont_display -= 1;
   686  0077  30FF               	movlw	255
   687  0078  07A2               	addwf	_cont_display,f
   688  0079  1803               	skipnc
   689  007A  0AA3               	incf	_cont_display+1,f
   690  007B  30FF               	movlw	255
   691  007C  07A3               	addwf	_cont_display+1,f
   692                           
   693                           ;LAB0.c: 73:                 PORTA = 1;
   694  007D  3001               	movlw	1
   695  007E  0085               	movwf	5	;volatile
   696                           
   697                           ;LAB0.c: 74:                 PORTB = 1;
   698  007F  3001               	movlw	1
   699  0080  0086               	movwf	6	;volatile
   700                           
   701                           ;LAB0.c: 75:             }
   702  0081  289D               	goto	i1l1027
   703  0082                     i1l1015:
   704  0082  087A               	movf	_cont+1,w
   705  0083  3A80               	xorlw	128
   706  0084  00FF               	movwf	btemp+1
   707  0085  3080               	movlw	128
   708  0086  027F               	subwf	btemp+1,w
   709  0087  1D03               	skipz
   710  0088  288B               	goto	u25_25
   711  0089  303C               	movlw	60
   712  008A  0279               	subwf	_cont,w
   713  008B                     u25_25:
   714  008B  1C03               	skipc
   715  008C  288E               	goto	u25_21
   716  008D  288F               	goto	u25_20
   717  008E                     u25_21:
   718  008E  289D               	goto	i1l1027
   719  008F                     u25_20:
   720  008F                     i1l1017:
   721                           
   722                           ;LAB0.c: 77:                 PORTD = 7;
   723  008F  3007               	movlw	7
   724  0090  1283               	bcf	3,5	;RP0=0, select bank0
   725  0091  1303               	bcf	3,6	;RP1=0, select bank0
   726  0092  0088               	movwf	8	;volatile
   727  0093                     i1l1019:
   728                           
   729                           ;LAB0.c: 78:                 cont = 0;
   730  0093  01F9               	clrf	_cont
   731  0094  01FA               	clrf	_cont+1
   732  0095                     i1l1021:
   733                           
   734                           ;LAB0.c: 79:                 cont_display = 0;
   735  0095  01A2               	clrf	_cont_display
   736  0096  01A3               	clrf	_cont_display+1
   737  0097                     i1l1023:
   738                           
   739                           ;LAB0.c: 80:                 cuenta_atras = 0;
   740  0097  01FB               	clrf	_cuenta_atras
   741  0098  01FC               	clrf	_cuenta_atras+1
   742  0099                     i1l1025:
   743                           
   744                           ;LAB0.c: 81:                 inicio_carrera = 1;
   745  0099  3001               	movlw	1
   746  009A  00F7               	movwf	_inicio_carrera
   747  009B  3000               	movlw	0
   748  009C  00F8               	movwf	_inicio_carrera+1
   749  009D                     i1l1027:
   750                           
   751                           ;LAB0.c: 83:             PORTC = tabla(cont_display);
   752  009D  1283               	bcf	3,5	;RP0=0, select bank0
   753  009E  1303               	bcf	3,6	;RP1=0, select bank0
   754  009F  0823               	movf	_cont_display+1,w
   755  00A0  00F1               	movwf	tabla@a+1
   756  00A1  0822               	movf	_cont_display,w
   757  00A2  00F0               	movwf	tabla@a
   758  00A3  120A  118A  2101  120A  118A  	fcall	_tabla
   759  00A8  0870               	movf	?_tabla,w
   760  00A9  1283               	bcf	3,5	;RP0=0, select bank0
   761  00AA  1303               	bcf	3,6	;RP1=0, select bank0
   762  00AB  0087               	movwf	7	;volatile
   763                           
   764                           ;LAB0.c: 84:         }
   765  00AC  28F6               	goto	i1l80
   766  00AD                     i1l1029:
   767  00AD  087B               	movf	_cuenta_atras,w
   768  00AE  047C               	iorwf	_cuenta_atras+1,w
   769  00AF  1D03               	btfss	3,2
   770  00B0  28B2               	goto	u26_21
   771  00B1  28B3               	goto	u26_20
   772  00B2                     u26_21:
   773  00B2  28F6               	goto	i1l80
   774  00B3                     u26_20:
   775  00B3                     i1l1031:
   776                           
   777                           ;LAB0.c: 88:             if(PORTEbits.RE1 == 1 && inicio_carrera == 1){
   778  00B3  1C89               	btfss	9,1	;volatile
   779  00B4  28B6               	goto	u27_21
   780  00B5  28B7               	goto	u27_20
   781  00B6                     u27_21:
   782  00B6  28C5               	goto	i1l1039
   783  00B7                     u27_20:
   784  00B7                     i1l1033:
   785  00B7  0377               	decf	_inicio_carrera,w
   786  00B8  0478               	iorwf	_inicio_carrera+1,w
   787  00B9  1D03               	btfss	3,2
   788  00BA  28BC               	goto	u28_21
   789  00BB  28BD               	goto	u28_20
   790  00BC                     u28_21:
   791  00BC  28C5               	goto	i1l1039
   792  00BD                     u28_20:
   793  00BD                     i1l71:
   794  00BD  1889               	btfsc	9,1	;volatile
   795  00BE  28C0               	goto	u29_21
   796  00BF  28C1               	goto	u29_20
   797  00C0                     u29_21:
   798  00C0  28BD               	goto	i1l71
   799  00C1                     u29_20:
   800  00C1                     i1l1037:
   801                           
   802                           ;LAB0.c: 90:                 PORTA = PORTA*2;
   803  00C1  0805               	movf	5,w	;volatile
   804  00C2  00F2               	movwf	??_isr
   805  00C3  0772               	addwf	??_isr,w
   806  00C4  0085               	movwf	5	;volatile
   807  00C5                     i1l1039:
   808                           
   809                           ;LAB0.c: 92:             if(PORTEbits.RE2 == 1 && inicio_carrera == 1){
   810  00C5  1D09               	btfss	9,2	;volatile
   811  00C6  28C8               	goto	u30_21
   812  00C7  28C9               	goto	u30_20
   813  00C8                     u30_21:
   814  00C8  28D7               	goto	i1l74
   815  00C9                     u30_20:
   816  00C9                     i1l1041:
   817  00C9  0377               	decf	_inicio_carrera,w
   818  00CA  0478               	iorwf	_inicio_carrera+1,w
   819  00CB  1D03               	btfss	3,2
   820  00CC  28CE               	goto	u31_21
   821  00CD  28CF               	goto	u31_20
   822  00CE                     u31_21:
   823  00CE  28D7               	goto	i1l74
   824  00CF                     u31_20:
   825  00CF                     i1l75:
   826  00CF  1909               	btfsc	9,2	;volatile
   827  00D0  28D2               	goto	u32_21
   828  00D1  28D3               	goto	u32_20
   829  00D2                     u32_21:
   830  00D2  28CF               	goto	i1l75
   831  00D3                     u32_20:
   832  00D3                     i1l1045:
   833                           
   834                           ;LAB0.c: 94:                 PORTB = PORTB*2;
   835  00D3  0806               	movf	6,w	;volatile
   836  00D4  00F2               	movwf	??_isr
   837  00D5  0772               	addwf	??_isr,w
   838  00D6  0086               	movwf	6	;volatile
   839  00D7                     i1l74:	
   840                           ;LAB0.c: 95:             }
   841                           
   842                           
   843                           ;LAB0.c: 96:             if(PORTA == 128 && PORTB < 128){
   844  00D7  3080               	movlw	128
   845  00D8  0605               	xorwf	5,w	;volatile
   846  00D9  1D03               	btfss	3,2
   847  00DA  28DC               	goto	u33_21
   848  00DB  28DD               	goto	u33_20
   849  00DC                     u33_21:
   850  00DC  28E6               	goto	i1l1053
   851  00DD                     u33_20:
   852  00DD                     i1l1047:
   853  00DD  3080               	movlw	128
   854  00DE  0206               	subwf	6,w	;volatile
   855  00DF  1803               	skipnc
   856  00E0  28E2               	goto	u34_21
   857  00E1  28E3               	goto	u34_20
   858  00E2                     u34_21:
   859  00E2  28E6               	goto	i1l1053
   860  00E3                     u34_20:
   861  00E3                     i1l1049:
   862                           
   863                           ;LAB0.c: 97:                 PORTDbits.RD6 = 1;
   864  00E3  1708               	bsf	8,6	;volatile
   865  00E4                     i1l1051:
   866                           
   867                           ;LAB0.c: 98:                 PORTC = 0b00000110;
   868  00E4  3006               	movlw	6
   869  00E5  0087               	movwf	7	;volatile
   870  00E6                     i1l1053:
   871                           
   872                           ;LAB0.c: 100:             if(PORTB == 128 && PORTA < 128){
   873  00E6  3080               	movlw	128
   874  00E7  0606               	xorwf	6,w	;volatile
   875  00E8  1D03               	btfss	3,2
   876  00E9  28EB               	goto	u35_21
   877  00EA  28EC               	goto	u35_20
   878  00EB                     u35_21:
   879  00EB  28F6               	goto	i1l68
   880  00EC                     u35_20:
   881  00EC                     i1l1055:
   882  00EC  3080               	movlw	128
   883  00ED  0205               	subwf	5,w	;volatile
   884  00EE  1803               	skipnc
   885  00EF  28F1               	goto	u36_21
   886  00F0  28F2               	goto	u36_20
   887  00F1                     u36_21:
   888  00F1  28F6               	goto	i1l68
   889  00F2                     u36_20:
   890  00F2                     i1l1057:
   891                           
   892                           ;LAB0.c: 101:                 PORTDbits.RD7 = 1;
   893  00F2  1788               	bsf	8,7	;volatile
   894  00F3                     i1l1059:
   895                           
   896                           ;LAB0.c: 102:                 PORTC = 0b01011011;
   897  00F3  305B               	movlw	91
   898  00F4  0087               	movwf	7	;volatile
   899  00F5  28F6               	goto	i1l80
   900  00F6                     i1l68:
   901  00F6                     i1l80:
   902  00F6  0876               	movf	??_isr+4,w
   903  00F7  00FF               	movwf	btemp+1
   904  00F8  0875               	movf	??_isr+3,w
   905  00F9  008A               	movwf	10
   906  00FA  0874               	movf	??_isr+2,w
   907  00FB  0084               	movwf	4
   908  00FC  0E73               	swapf	??_isr+1,w
   909  00FD  0083               	movwf	3
   910  00FE  0EFE               	swapf	btemp,f
   911  00FF  0E7E               	swapf	btemp,w
   912  0100  0009               	retfie
   913  0101                     __end_of_isr:
   914                           
   915                           	psect	intentry
   916  0004                     __pintentry:	
   917                           ;incstack = 0
   918                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   919                           
   920  0004                     interrupt_function:
   921  007E                     saved_w	set	btemp
   922  0004  00FE               	movwf	btemp
   923  0005  0E03               	swapf	3,w
   924  0006  00F3               	movwf	??_isr+1
   925  0007  0804               	movf	4,w
   926  0008  00F4               	movwf	??_isr+2
   927  0009  080A               	movf	10,w
   928  000A  00F5               	movwf	??_isr+3
   929  000B  1283               	bcf	3,5	;RP0=0, select bank0
   930  000C  1303               	bcf	3,6	;RP1=0, select bank0
   931  000D  087F               	movf	btemp+1,w
   932  000E  00F6               	movwf	??_isr+4
   933  000F  120A  118A  2837   	ljmp	_isr
   934                           
   935                           	psect	text3
   936  0193                     __ptext3:	
   937 ;; *************** function _tmr0 *****************
   938 ;; Defined at:
   939 ;;		line 161 in file "LAB0.c"
   940 ;; Parameters:    Size  Location     Type
   941 ;;		None
   942 ;; Auto vars:     Size  Location     Type
   943 ;;		None
   944 ;; Return value:  Size  Location     Type
   945 ;;                  1    wreg      void 
   946 ;; Registers used:
   947 ;;		wreg
   948 ;; Tracked objects:
   949 ;;		On entry : 0/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   953 ;;      Params:         0       0       0       0       0
   954 ;;      Locals:         0       0       0       0       0
   955 ;;      Temps:          0       0       0       0       0
   956 ;;      Totals:         0       0       0       0       0
   957 ;;Total ram usage:        0 bytes
   958 ;; Hardware stack levels used: 1
   959 ;; This function calls:
   960 ;;		Nothing
   961 ;; This function is called by:
   962 ;;		_isr
   963 ;; This function uses a non-reentrant model
   964 ;;
   965                           
   966                           
   967                           ;psect for function _tmr0
   968  0193                     _tmr0:
   969  0193                     i1l913:	
   970                           ;incstack = 0
   971                           ; Regs used in _tmr0: [wreg]
   972                           
   973                           
   974                           ;LAB0.c: 162:     INTCONbits.T0IF = 0;
   975  0193  110B               	bcf	11,2	;volatile
   976  0194                     i1l915:
   977                           
   978                           ;LAB0.c: 163:     TMR0 = 61;
   979  0194  303D               	movlw	61
   980  0195  1283               	bcf	3,5	;RP0=0, select bank0
   981  0196  1303               	bcf	3,6	;RP1=0, select bank0
   982  0197  0081               	movwf	1	;volatile
   983  0198                     i1l94:
   984  0198  0008               	return
   985  0199                     __end_of_tmr0:
   986                           
   987                           	psect	text4
   988  0101                     __ptext4:	
   989 ;; *************** function _tabla *****************
   990 ;; Defined at:
   991 ;;		line 167 in file "LAB0.c"
   992 ;; Parameters:    Size  Location     Type
   993 ;;  a               2    0[COMMON] int 
   994 ;; Auto vars:     Size  Location     Type
   995 ;;		None
   996 ;; Return value:  Size  Location     Type
   997 ;;                  2    0[COMMON] int 
   998 ;; Registers used:
   999 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1000 ;; Tracked objects:
  1001 ;;		On entry : 0/0
  1002 ;;		On exit  : 0/0
  1003 ;;		Unchanged: 0/0
  1004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1005 ;;      Params:         2       0       0       0       0
  1006 ;;      Locals:         0       0       0       0       0
  1007 ;;      Temps:          0       0       0       0       0
  1008 ;;      Totals:         2       0       0       0       0
  1009 ;;Total ram usage:        2 bytes
  1010 ;; Hardware stack levels used: 1
  1011 ;; This function calls:
  1012 ;;		Nothing
  1013 ;; This function is called by:
  1014 ;;		_isr
  1015 ;; This function uses a non-reentrant model
  1016 ;;
  1017                           
  1018                           
  1019                           ;psect for function _tabla
  1020  0101                     _tabla:
  1021  0101                     i1l919:	
  1022                           ;incstack = 0
  1023                           ; Regs used in _tabla: [wreg-fsr0h+status,2+status,0]
  1024                           
  1025                           
  1026                           ;LAB0.c: 168:     switch (a){
  1027  0101  2939               	goto	i1l987
  1028  0102                     i1l921:
  1029                           
  1030                           ;LAB0.c: 170:             return 0b00111111;
  1031  0102  303F               	movlw	63
  1032  0103  00F0               	movwf	?_tabla
  1033  0104  3000               	movlw	0
  1034  0105  00F1               	movwf	?_tabla+1
  1035  0106  2961               	goto	i1l99
  1036  0107                     i1l927:
  1037                           
  1038                           ;LAB0.c: 173:             return 0b00000110;
  1039  0107  3006               	movlw	6
  1040  0108  00F0               	movwf	?_tabla
  1041  0109  3000               	movlw	0
  1042  010A  00F1               	movwf	?_tabla+1
  1043  010B  2961               	goto	i1l99
  1044  010C                     i1l933:
  1045                           
  1046                           ;LAB0.c: 176:             return 0b01011011;
  1047  010C  305B               	movlw	91
  1048  010D  00F0               	movwf	?_tabla
  1049  010E  3000               	movlw	0
  1050  010F  00F1               	movwf	?_tabla+1
  1051  0110  2961               	goto	i1l99
  1052  0111                     i1l939:
  1053                           
  1054                           ;LAB0.c: 179:             return 0b01001111;
  1055  0111  304F               	movlw	79
  1056  0112  00F0               	movwf	?_tabla
  1057  0113  3000               	movlw	0
  1058  0114  00F1               	movwf	?_tabla+1
  1059  0115  2961               	goto	i1l99
  1060  0116                     i1l945:
  1061                           
  1062                           ;LAB0.c: 182:             return 0b01100110;
  1063  0116  3066               	movlw	102
  1064  0117  00F0               	movwf	?_tabla
  1065  0118  3000               	movlw	0
  1066  0119  00F1               	movwf	?_tabla+1
  1067  011A  2961               	goto	i1l99
  1068  011B                     i1l951:
  1069                           
  1070                           ;LAB0.c: 185:             return 0b01101101;
  1071  011B  306D               	movlw	109
  1072  011C  00F0               	movwf	?_tabla
  1073  011D  3000               	movlw	0
  1074  011E  00F1               	movwf	?_tabla+1
  1075  011F  2961               	goto	i1l99
  1076  0120                     i1l957:
  1077                           
  1078                           ;LAB0.c: 188:             return 0b01111101;
  1079  0120  307D               	movlw	125
  1080  0121  00F0               	movwf	?_tabla
  1081  0122  3000               	movlw	0
  1082  0123  00F1               	movwf	?_tabla+1
  1083  0124  2961               	goto	i1l99
  1084  0125                     i1l963:
  1085                           
  1086                           ;LAB0.c: 191:             return 0b00000111;
  1087  0125  3007               	movlw	7
  1088  0126  00F0               	movwf	?_tabla
  1089  0127  3000               	movlw	0
  1090  0128  00F1               	movwf	?_tabla+1
  1091  0129  2961               	goto	i1l99
  1092  012A                     i1l969:
  1093                           
  1094                           ;LAB0.c: 194:             return 0b01111111;
  1095  012A  307F               	movlw	127
  1096  012B  00F0               	movwf	?_tabla
  1097  012C  3000               	movlw	0
  1098  012D  00F1               	movwf	?_tabla+1
  1099  012E  2961               	goto	i1l99
  1100  012F                     i1l975:
  1101                           
  1102                           ;LAB0.c: 197:             return 0b01101111;
  1103  012F  306F               	movlw	111
  1104  0130  00F0               	movwf	?_tabla
  1105  0131  3000               	movlw	0
  1106  0132  00F1               	movwf	?_tabla+1
  1107  0133  2961               	goto	i1l99
  1108  0134                     i1l981:
  1109                           
  1110                           ;LAB0.c: 200:             return 0b01111011;
  1111  0134  307B               	movlw	123
  1112  0135  00F0               	movwf	?_tabla
  1113  0136  3000               	movlw	0
  1114  0137  00F1               	movwf	?_tabla+1
  1115  0138  2961               	goto	i1l99
  1116  0139                     i1l987:
  1117                           
  1118                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1119                           ; Switch size 1, requested type "simple"
  1120                           ; Number of cases is 1, Range of values is 0 to 0
  1121                           ; switch strategies available:
  1122                           ; Name         Instructions Cycles
  1123                           ; simple_byte            4     3 (average)
  1124                           ; direct_byte           11     8 (fixed)
  1125                           ; jumptable            260     6 (fixed)
  1126                           ;	Chosen strategy is simple_byte
  1127  0139  0871               	movf	tabla@a+1,w
  1128  013A  3A00               	xorlw	0	; case 0
  1129  013B  1903               	skipnz
  1130  013C  293E               	goto	i1l1143
  1131  013D  2961               	goto	i1l99
  1132  013E                     i1l1143:
  1133                           
  1134                           ; Switch size 1, requested type "simple"
  1135                           ; Number of cases is 11, Range of values is 0 to 10
  1136                           ; switch strategies available:
  1137                           ; Name         Instructions Cycles
  1138                           ; simple_byte           34    18 (average)
  1139                           ; direct_byte           41     8 (fixed)
  1140                           ; jumptable            260     6 (fixed)
  1141                           ;	Chosen strategy is simple_byte
  1142  013E  0870               	movf	tabla@a,w
  1143  013F  3A00               	xorlw	0	; case 0
  1144  0140  1903               	skipnz
  1145  0141  2902               	goto	i1l921
  1146  0142  3A01               	xorlw	1	; case 1
  1147  0143  1903               	skipnz
  1148  0144  2907               	goto	i1l927
  1149  0145  3A03               	xorlw	3	; case 2
  1150  0146  1903               	skipnz
  1151  0147  290C               	goto	i1l933
  1152  0148  3A01               	xorlw	1	; case 3
  1153  0149  1903               	skipnz
  1154  014A  2911               	goto	i1l939
  1155  014B  3A07               	xorlw	7	; case 4
  1156  014C  1903               	skipnz
  1157  014D  2916               	goto	i1l945
  1158  014E  3A01               	xorlw	1	; case 5
  1159  014F  1903               	skipnz
  1160  0150  291B               	goto	i1l951
  1161  0151  3A03               	xorlw	3	; case 6
  1162  0152  1903               	skipnz
  1163  0153  2920               	goto	i1l957
  1164  0154  3A01               	xorlw	1	; case 7
  1165  0155  1903               	skipnz
  1166  0156  2925               	goto	i1l963
  1167  0157  3A0F               	xorlw	15	; case 8
  1168  0158  1903               	skipnz
  1169  0159  292A               	goto	i1l969
  1170  015A  3A01               	xorlw	1	; case 9
  1171  015B  1903               	skipnz
  1172  015C  292F               	goto	i1l975
  1173  015D  3A03               	xorlw	3	; case 10
  1174  015E  1903               	skipnz
  1175  015F  2934               	goto	i1l981
  1176  0160  2961               	goto	i1l99
  1177  0161                     i1l99:
  1178  0161  0008               	return
  1179  0162                     __end_of_tabla:
  1180  007E                     btemp	set	126	;btemp
  1181  007E                     wtemp0	set	126
  1182                           
  1183                           	psect	config
  1184                           
  1185                           ;Config register CONFIG1 @ 0x2007
  1186                           ;	Oscillator Selection bits
  1187                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1188                           ;	Watchdog Timer Enable bit
  1189                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1190                           ;	Power-up Timer Enable bit
  1191                           ;	PWRTE = OFF, PWRT disabled
  1192                           ;	RE3/MCLR pin function select bit
  1193                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1194                           ;	Code Protection bit
  1195                           ;	CP = OFF, Program memory code protection is disabled
  1196                           ;	Data Code Protection bit
  1197                           ;	CPD = OFF, Data memory code protection is disabled
  1198                           ;	Brown Out Reset Selection bits
  1199                           ;	BOREN = OFF, BOR disabled
  1200                           ;	Internal External Switchover bit
  1201                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1202                           ;	Fail-Safe Clock Monitor Enabled bit
  1203                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1204                           ;	Low Voltage Programming Enable bit
  1205                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1206                           ;	In-Circuit Debugger Mode bit
  1207                           ;	DEBUG = 0x1, unprogrammed default
  1208  2007                     	org	8199
  1209  2007  20D4               	dw	8404
  1210                           
  1211                           ;Config register CONFIG2 @ 0x2008
  1212                           ;	Brown-out Reset Selection bit
  1213                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1214                           ;	Flash Program Memory Self Write Enable bits
  1215                           ;	WRT = OFF, Write protection off
  1216  2008                     	org	8200
  1217  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      13
    BANK0            80      0       4
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_tabla

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  5     5      0      98
                                              2 COMMON     5     5      0
                              _tabla
                               _tmr0
 ---------------------------------------------------------------------------------
 (3) _tmr0                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _tabla                                                2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _isr (ROOT)
   _tabla
   _tmr0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       4       5        5.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      11      12        0.0%
ABS                  0      0      11       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Jan 20 09:56:08 2022

                     l91 0189                       l85 018F                       l86 018F  
                    _isr 0037                      fsr0 0004                     l1101 017D  
                   l1111 0185                     l1103 017E                     l1113 0186  
                   l1105 017F                     l1121 018A                     l1115 0187  
                   l1107 0180                     l1117 0188                     l1109 0181  
                   l1081 0162                     l1091 0173                     l1083 016C  
                   l1093 0174                     l1085 016E                     l1095 017A  
                   l1087 0171                     l1097 017B                     l1089 0172  
                   l1099 017C                     ?_isr 0070                     _T0IF 005A  
                   i1l60 0047                     i1l71 00BD                     i1l80 00F6  
                   i1l74 00D7                     i1l75 00CF                     i1l68 00F6  
                   i1l94 0198                     i1l99 0161                     _TMR0 0001  
                   _cont 0079                     _main 018A                     _tmr0 0193  
                   btemp 007E                     start 0012                    ??_isr 0072  
                  ?_main 0070                    ?_tmr0 0070                    _ANSEL 0188  
                  i1l921 0102                    i1l913 0193                    i1l915 0194  
                  i1l933 010C                    i1l951 011B                    i1l927 0107  
                  i1l919 0101                    i1l945 0116                    i1l963 0125  
                  i1l939 0111                    i1l981 0134                    i1l957 0120  
                  i1l975 012F                    i1l969 012A                    i1l993 0037  
                  i1l987 0139                    i1l995 003B                    i1l997 0041  
                  u20_20 0041                    u20_21 0040                    u21_20 0047  
                  u21_21 0046                    u30_20 00C9                    u22_20 004B  
                  u30_21 00C8                    u22_21 004A                    u31_20 00CF  
                  u23_20 0061                    u31_21 00CE                    u23_21 0060  
                  u32_20 00D3                    u24_20 0073                    u32_21 00D2  
                  u24_21 0072                    u33_20 00DD                    u25_20 008F  
                  u33_21 00DC                    u25_21 008E                    u25_25 008B  
                  u34_20 00E3                    u26_20 00B3                    u34_21 00E2  
                  u26_21 00B2                    u35_20 00EC                    u27_20 00B7  
                  u19_20 003B                    u35_21 00EB                    u27_21 00B6  
                  u19_21 003A                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    u36_20 00F2  
                  u28_20 00BD                    u36_21 00F1                    u28_21 00BC  
                  u29_20 00C1                    u29_21 00C0                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _tabla 0101                    _setup 0162  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0015             __end_of_main 0193             __end_of_tmr0 0199  
                 ??_main 0000                   ??_tmr0 0070                   ?_tabla 0070  
                 ?_setup 0070                   _ANSELH 0189                   i1l1001 004B  
                 i1l1011 006C                   i1l1003 004F                   i1l1021 0095  
                 i1l1013 0073                   i1l1005 0054                   i1l1031 00B3  
                 i1l1023 0097                   i1l1015 0082                   i1l1007 005A  
                 i1l1041 00C9                   i1l1033 00B7                   i1l1025 0099  
                 i1l1017 008F                   i1l1009 0061                   i1l1051 00E4  
                 i1l1019 0093                   i1l1027 009D                   i1l1053 00E6  
                 i1l1045 00D3                   i1l1037 00C1                   i1l1029 00AD  
                 i1l1143 013E                   i1l1055 00EC                   i1l1047 00DD  
                 i1l1039 00C5                   i1l1057 00F2                   i1l1049 00E3  
                 i1l1059 00F3                   tabla@a 0070             __pdataCOMMON 007B  
                 saved_w 007E  __end_of__initialization 0033           __pcstackCOMMON 0070  
           __pidataBANK0 019B            __end_of_tabla 0162            __end_of_setup 018A  
         _OPTION_REGbits 0081                  ??_tabla 0072                  ??_setup 0000  
             __pbssBANK0 0020               __pmaintext 018A               __pintentry 0004  
         _inicio_carrera 0077                  __ptext1 0162                  __ptext2 0037  
                __ptext3 0193                  __ptext4 0101             __size_of_isr 00CA  
   end_of_initialization 0033                _PORTDbits 0008                _PORTEbits 0009  
           _cont_display 0022             _cuenta_atras 007B            __pidataCOMMON 0199  
    start_initialization 0015              __end_of_isr 0101              __pdataBANK0 0022  
            __pbssCOMMON 0077                ___latbits 0002            __pcstackBANK0 0000  
         __size_of_tabla 0061           __size_of_setup 0028        interrupt_function 0004  
         _timer_iniciado 0020            __size_of_main 0009            __size_of_tmr0 0006  
             _INTCONbits 000B                 intlevel1 0000               _OSCCONbits 008F  
