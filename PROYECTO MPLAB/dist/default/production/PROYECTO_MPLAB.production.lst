

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Jan 20 10:30:38 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212                           
   213                           	psect	idataCOMMON
   214  01AA                     __pidataCOMMON:
   215                           
   216                           ;initializer for _cuenta_atras
   217  01AA  3401               	retlw	1
   218  01AB  3400               	retlw	0
   219                           
   220                           	psect	idataBANK0
   221  01AC                     __pidataBANK0:
   222                           
   223                           ;initializer for _cont_display
   224  01AC  3403               	retlw	3
   225  01AD  3400               	retlw	0
   226  000B                     _INTCONbits	set	11
   227  0001                     _TMR0	set	1
   228  0008                     _PORTDbits	set	8
   229  0007                     _PORTC	set	7
   230  0006                     _PORTB	set	6
   231  0005                     _PORTA	set	5
   232  0008                     _PORTD	set	8
   233  0009                     _PORTEbits	set	9
   234  005A                     _T0IF	set	90
   235  0081                     _OPTION_REGbits	set	129
   236  008F                     _OSCCONbits	set	143
   237  0089                     _TRISE	set	137
   238  0088                     _TRISD	set	136
   239  0087                     _TRISC	set	135
   240  0086                     _TRISB	set	134
   241  0085                     _TRISA	set	133
   242  0189                     _ANSELH	set	393
   243  0188                     _ANSEL	set	392
   244                           
   245                           	psect	cinit
   246  0015                     start_initialization:	
   247                           ; #config settings
   248                           
   249  0015                     __initialization:
   250                           
   251                           ; Initialize objects allocated to BANK0
   252  0015  120A  118A  21AC  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   253  001A  00A2               	movwf	__pdataBANK0& (0+127)
   254  001B  120A  118A  21AD  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   255  0020  00A3               	movwf	(__pdataBANK0+1)& (0+127)
   256                           
   257                           ; Initialize objects allocated to COMMON
   258  0021  120A  118A  21AA  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   259  0026  00FB               	movwf	__pdataCOMMON& (0+127)
   260  0027  120A  118A  21AB  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   261  002C  00FC               	movwf	(__pdataCOMMON+1)& (0+127)
   262                           
   263                           ; Clear objects allocated to BANK0
   264  002D  01A0               	clrf	__pbssBANK0& (0+127)
   265  002E  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   266                           
   267                           ; Clear objects allocated to COMMON
   268  002F  01F7               	clrf	__pbssCOMMON& (0+127)
   269  0030  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   270  0031  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   271  0032  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   272  0033                     end_of_initialization:	
   273                           ;End of C runtime variable initialization code
   274                           
   275  0033                     __end_of__initialization:
   276  0033  0183               	clrf	3
   277  0034  120A  118A  299B   	ljmp	_main	;jump to C main() function
   278                           
   279                           	psect	bssCOMMON
   280  0077                     __pbssCOMMON:
   281  0077                     _inicio_carrera:
   282  0077                     	ds	2
   283  0079                     _cont:
   284  0079                     	ds	2
   285                           
   286                           	psect	dataCOMMON
   287  007B                     __pdataCOMMON:
   288  007B                     _cuenta_atras:
   289  007B                     	ds	2
   290                           
   291                           	psect	bssBANK0
   292  0020                     __pbssBANK0:
   293  0020                     _timer_iniciado:
   294  0020                     	ds	2
   295                           
   296                           	psect	dataBANK0
   297  0022                     __pdataBANK0:
   298  0022                     _cont_display:
   299  0022                     	ds	2
   300                           
   301                           	psect	cstackCOMMON
   302  0070                     __pcstackCOMMON:
   303  0070                     ?_tmr0:
   304  0070                     ??_tmr0:	
   305                           ; 1 bytes @ 0x0
   306                           
   307  0070                     ?_setup:	
   308                           ; 1 bytes @ 0x0
   309                           
   310  0070                     ?_isr:	
   311                           ; 1 bytes @ 0x0
   312                           
   313  0070                     ?_main:	
   314                           ; 1 bytes @ 0x0
   315                           
   316  0070                     ?_tabla:	
   317                           ; 1 bytes @ 0x0
   318                           
   319  0070                     tabla@a:	
   320                           ; 2 bytes @ 0x0
   321                           
   322                           
   323                           ; 2 bytes @ 0x0
   324  0070                     	ds	2
   325  0072                     ??_tabla:
   326  0072                     ??_isr:	
   327                           ; 1 bytes @ 0x2
   328                           
   329                           
   330                           ; 1 bytes @ 0x2
   331  0072                     	ds	5
   332                           
   333                           	psect	cstackBANK0
   334  0000                     __pcstackBANK0:
   335  0000                     ??_setup:
   336  0000                     ??_main:	
   337                           ; 1 bytes @ 0x0
   338                           
   339                           
   340                           	psect	maintext
   341  019B                     __pmaintext:	
   342                           ; 1 bytes @ 0x0
   343 ;;
   344 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   345 ;;
   346 ;; *************** function _main *****************
   347 ;; Defined at:
   348 ;;		line 125 in file "LAB0.c"
   349 ;; Parameters:    Size  Location     Type
   350 ;;		None
   351 ;; Auto vars:     Size  Location     Type
   352 ;;		None
   353 ;; Return value:  Size  Location     Type
   354 ;;                  1    wreg      void 
   355 ;; Registers used:
   356 ;;		wreg, status,2, status,0, pclath, cstack
   357 ;; Tracked objects:
   358 ;;		On entry : B00/0
   359 ;;		On exit  : 0/0
   360 ;;		Unchanged: 0/0
   361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   362 ;;      Params:         0       0       0       0       0
   363 ;;      Locals:         0       0       0       0       0
   364 ;;      Temps:          0       0       0       0       0
   365 ;;      Totals:         0       0       0       0       0
   366 ;;Total ram usage:        0 bytes
   367 ;; Hardware stack levels required when called: 3
   368 ;; This function calls:
   369 ;;		_setup
   370 ;; This function is called by:
   371 ;;		Startup code after reset
   372 ;; This function uses a non-reentrant model
   373 ;;
   374                           
   375                           
   376                           ;psect for function _main
   377  019B                     _main:
   378  019B                     l1136:	
   379                           ;incstack = 0
   380                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   381                           
   382                           
   383                           ;LAB0.c: 126:     setup();
   384  019B  120A  118A  2173  120A  118A  	fcall	_setup
   385  01A0                     l89:	
   386                           ;LAB0.c: 127:     while(1){
   387                           
   388  01A0                     l90:	
   389                           ;LAB0.c: 129:     }
   390                           
   391  01A0  29A0               	goto	l89
   392  01A1  120A  118A  2812   	ljmp	start
   393  01A4                     __end_of_main:
   394                           
   395                           	psect	text1
   396  0173                     __ptext1:	
   397 ;; *************** function _setup *****************
   398 ;; Defined at:
   399 ;;		line 133 in file "LAB0.c"
   400 ;; Parameters:    Size  Location     Type
   401 ;;		None
   402 ;; Auto vars:     Size  Location     Type
   403 ;;		None
   404 ;; Return value:  Size  Location     Type
   405 ;;                  1    wreg      void 
   406 ;; Registers used:
   407 ;;		wreg, status,2, status,0
   408 ;; Tracked objects:
   409 ;;		On entry : 0/0
   410 ;;		On exit  : 0/0
   411 ;;		Unchanged: 0/0
   412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   413 ;;      Params:         0       0       0       0       0
   414 ;;      Locals:         0       0       0       0       0
   415 ;;      Temps:          0       0       0       0       0
   416 ;;      Totals:         0       0       0       0       0
   417 ;;Total ram usage:        0 bytes
   418 ;; Hardware stack levels used: 1
   419 ;; Hardware stack levels required when called: 2
   420 ;; This function calls:
   421 ;;		Nothing
   422 ;; This function is called by:
   423 ;;		_main
   424 ;; This function uses a non-reentrant model
   425 ;;
   426                           
   427                           
   428                           ;psect for function _setup
   429  0173                     _setup:
   430  0173                     l1096:	
   431                           ;incstack = 0
   432                           ; Regs used in _setup: [wreg+status,2+status,0]
   433                           
   434                           
   435                           ;LAB0.c: 136:     ANSEL = 0;
   436  0173  1683               	bsf	3,5	;RP0=1, select bank3
   437  0174  1703               	bsf	3,6	;RP1=1, select bank3
   438  0175  0188               	clrf	8	;volatile
   439                           
   440                           ;LAB0.c: 137:     ANSELH = 0;
   441  0176  0189               	clrf	9	;volatile
   442                           
   443                           ;LAB0.c: 139:     TRISA = 0;
   444  0177  1683               	bsf	3,5	;RP0=1, select bank1
   445  0178  1303               	bcf	3,6	;RP1=0, select bank1
   446  0179  0185               	clrf	5	;volatile
   447                           
   448                           ;LAB0.c: 140:     TRISB = 0;
   449  017A  0186               	clrf	6	;volatile
   450                           
   451                           ;LAB0.c: 141:     TRISC = 0;
   452  017B  0187               	clrf	7	;volatile
   453                           
   454                           ;LAB0.c: 142:     TRISD = 0;
   455  017C  0188               	clrf	8	;volatile
   456  017D                     l1098:
   457                           
   458                           ;LAB0.c: 143:     TRISE = 0b00000111;
   459  017D  3007               	movlw	7
   460  017E  0089               	movwf	9	;volatile
   461  017F                     l1100:
   462                           
   463                           ;LAB0.c: 145:     PORTA = 0;
   464  017F  1283               	bcf	3,5	;RP0=0, select bank0
   465  0180  1303               	bcf	3,6	;RP1=0, select bank0
   466  0181  0185               	clrf	5	;volatile
   467  0182                     l1102:
   468                           
   469                           ;LAB0.c: 146:     PORTD = 0;
   470  0182  0188               	clrf	8	;volatile
   471  0183                     l1104:
   472                           
   473                           ;LAB0.c: 147:     PORTB = 0;
   474  0183  0186               	clrf	6	;volatile
   475  0184                     l1106:
   476                           
   477                           ;LAB0.c: 148:     PORTC = 0;
   478  0184  0187               	clrf	7	;volatile
   479  0185                     l1108:
   480                           
   481                           ;LAB0.c: 151:     OSCCONbits.IRCF = 0b0110;
   482  0185  1683               	bsf	3,5	;RP0=1, select bank1
   483  0186  1303               	bcf	3,6	;RP1=0, select bank1
   484  0187  080F               	movf	15,w	;volatile
   485  0188  398F               	andlw	-113
   486  0189  3860               	iorlw	96
   487  018A  008F               	movwf	15	;volatile
   488  018B                     l1110:
   489                           
   490                           ;LAB0.c: 152:     OSCCONbits.SCS = 1;
   491  018B  140F               	bsf	15,0	;volatile
   492  018C                     l1112:
   493                           
   494                           ;LAB0.c: 155:     OPTION_REGbits.T0CS = 0;
   495  018C  1281               	bcf	1,5	;volatile
   496  018D                     l1114:
   497                           
   498                           ;LAB0.c: 156:     OPTION_REGbits.T0SE = 0;
   499  018D  1201               	bcf	1,4	;volatile
   500  018E                     l1116:
   501                           
   502                           ;LAB0.c: 157:     OPTION_REGbits.PSA = 0;
   503  018E  1181               	bcf	1,3	;volatile
   504  018F                     l1118:
   505                           
   506                           ;LAB0.c: 158:     OPTION_REGbits.PS2 = 1;
   507  018F  1501               	bsf	1,2	;volatile
   508  0190                     l1120:
   509                           
   510                           ;LAB0.c: 159:     OPTION_REGbits.PS1 = 1;
   511  0190  1481               	bsf	1,1	;volatile
   512  0191                     l1122:
   513                           
   514                           ;LAB0.c: 160:     OPTION_REGbits.PS0 = 1;
   515  0191  1401               	bsf	1,0	;volatile
   516  0192                     l1124:
   517                           
   518                           ;LAB0.c: 161:     TMR0 = 61;
   519  0192  303D               	movlw	61
   520  0193  1283               	bcf	3,5	;RP0=0, select bank0
   521  0194  1303               	bcf	3,6	;RP1=0, select bank0
   522  0195  0081               	movwf	1	;volatile
   523  0196                     l1126:
   524                           
   525                           ;LAB0.c: 164:     INTCONbits.T0IF = 0;
   526  0196  110B               	bcf	11,2	;volatile
   527  0197                     l1128:
   528                           
   529                           ;LAB0.c: 165:     INTCONbits.T0IE = 1;
   530  0197  168B               	bsf	11,5	;volatile
   531  0198                     l1130:
   532                           
   533                           ;LAB0.c: 166:     INTCONbits.GIE = 1;
   534  0198  178B               	bsf	11,7	;volatile
   535  0199                     l1132:
   536                           
   537                           ;LAB0.c: 167:     INTCONbits.PEIE = 1;
   538  0199  170B               	bsf	11,6	;volatile
   539  019A                     l95:
   540  019A  0008               	return
   541  019B                     __end_of_setup:
   542                           
   543                           	psect	text2
   544  0037                     __ptext2:	
   545 ;; *************** function _isr *****************
   546 ;; Defined at:
   547 ;;		line 55 in file "LAB0.c"
   548 ;; Parameters:    Size  Location     Type
   549 ;;		None
   550 ;; Auto vars:     Size  Location     Type
   551 ;;		None
   552 ;; Return value:  Size  Location     Type
   553 ;;                  1    wreg      void 
   554 ;; Registers used:
   555 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   556 ;; Tracked objects:
   557 ;;		On entry : 0/0
   558 ;;		On exit  : 0/0
   559 ;;		Unchanged: 0/0
   560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   561 ;;      Params:         0       0       0       0       0
   562 ;;      Locals:         0       0       0       0       0
   563 ;;      Temps:          5       0       0       0       0
   564 ;;      Totals:         5       0       0       0       0
   565 ;;Total ram usage:        5 bytes
   566 ;; Hardware stack levels used: 1
   567 ;; Hardware stack levels required when called: 1
   568 ;; This function calls:
   569 ;;		_tabla
   570 ;;		_tmr0
   571 ;; This function is called by:
   572 ;;		Interrupt level 1
   573 ;; This function uses a non-reentrant model
   574 ;;
   575                           
   576                           
   577                           ;psect for function _isr
   578  0037                     _isr:
   579  0037                     i1l998:
   580                           
   581                           ;LAB0.c: 56:     if(T0IF){
   582  0037  1D0B               	btfss	11,2	;volatile
   583  0038  283A               	goto	u21_21
   584  0039  283B               	goto	u21_20
   585  003A                     u21_21:
   586  003A  290F               	goto	i1l84
   587  003B                     u21_20:
   588  003B                     i1l1000:
   589                           
   590                           ;LAB0.c: 59:         if(cuenta_atras == 1){
   591  003B  037B               	decf	_cuenta_atras,w
   592  003C  047C               	iorwf	_cuenta_atras+1,w
   593  003D  1D03               	btfss	3,2
   594  003E  2840               	goto	u22_21
   595  003F  2841               	goto	u22_20
   596  0040                     u22_21:
   597  0040  28AD               	goto	i1l1034
   598  0041                     u22_20:
   599  0041                     i1l1002:
   600                           
   601                           ;LAB0.c: 60:             if(timer_iniciado == 0){
   602  0041  0820               	movf	_timer_iniciado,w
   603  0042  0421               	iorwf	_timer_iniciado+1,w
   604  0043  1D03               	btfss	3,2
   605  0044  2846               	goto	u23_21
   606  0045  2847               	goto	u23_20
   607  0046                     u23_21:
   608  0046  284F               	goto	i1l1008
   609  0047                     u23_20:
   610  0047                     i1l60:
   611  0047  1C09               	btfss	9,0	;volatile
   612  0048  284A               	goto	u24_21
   613  0049  284B               	goto	u24_20
   614  004A                     u24_21:
   615  004A  2847               	goto	i1l60
   616  004B                     u24_20:
   617  004B                     i1l1006:
   618                           
   619                           ;LAB0.c: 62:                 timer_iniciado = 1;
   620  004B  3001               	movlw	1
   621  004C  00A0               	movwf	_timer_iniciado
   622  004D  3000               	movlw	0
   623  004E  00A1               	movwf	_timer_iniciado+1
   624  004F                     i1l1008:
   625                           
   626                           ;LAB0.c: 64:             tmr0();
   627  004F  120A  118A  21A4  120A  118A  	fcall	_tmr0
   628  0054                     i1l1010:
   629                           
   630                           ;LAB0.c: 65:             cont ++;
   631  0054  3001               	movlw	1
   632  0055  07F9               	addwf	_cont,f
   633  0056  1803               	skipnc
   634  0057  0AFA               	incf	_cont+1,f
   635  0058  3000               	movlw	0
   636  0059  07FA               	addwf	_cont+1,f
   637  005A                     i1l1012:
   638                           
   639                           ;LAB0.c: 66:             if(cont == 20){
   640  005A  3014               	movlw	20
   641  005B  0679               	xorwf	_cont,w
   642  005C  047A               	iorwf	_cont+1,w
   643  005D  1D03               	btfss	3,2
   644  005E  2860               	goto	u25_21
   645  005F  2861               	goto	u25_20
   646  0060                     u25_21:
   647  0060  286C               	goto	i1l1016
   648  0061                     u25_20:
   649  0061                     i1l1014:
   650                           
   651                           ;LAB0.c: 67:                 PORTD = 1;
   652  0061  3001               	movlw	1
   653  0062  1283               	bcf	3,5	;RP0=0, select bank0
   654  0063  1303               	bcf	3,6	;RP1=0, select bank0
   655  0064  0088               	movwf	8	;volatile
   656                           
   657                           ;LAB0.c: 68:                 cont_display -= 1;
   658  0065  30FF               	movlw	255
   659  0066  07A2               	addwf	_cont_display,f
   660  0067  1803               	skipnc
   661  0068  0AA3               	incf	_cont_display+1,f
   662  0069  30FF               	movlw	255
   663  006A  07A3               	addwf	_cont_display+1,f
   664                           
   665                           ;LAB0.c: 69:             }
   666  006B  289D               	goto	i1l1032
   667  006C                     i1l1016:
   668  006C  3028               	movlw	40
   669  006D  0679               	xorwf	_cont,w
   670  006E  047A               	iorwf	_cont+1,w
   671  006F  1D03               	btfss	3,2
   672  0070  2872               	goto	u26_21
   673  0071  2873               	goto	u26_20
   674  0072                     u26_21:
   675  0072  2882               	goto	i1l1020
   676  0073                     u26_20:
   677  0073                     i1l1018:
   678                           
   679                           ;LAB0.c: 71:                 PORTD = 3;
   680  0073  3003               	movlw	3
   681  0074  1283               	bcf	3,5	;RP0=0, select bank0
   682  0075  1303               	bcf	3,6	;RP1=0, select bank0
   683  0076  0088               	movwf	8	;volatile
   684                           
   685                           ;LAB0.c: 72:                 cont_display -= 1;
   686  0077  30FF               	movlw	255
   687  0078  07A2               	addwf	_cont_display,f
   688  0079  1803               	skipnc
   689  007A  0AA3               	incf	_cont_display+1,f
   690  007B  30FF               	movlw	255
   691  007C  07A3               	addwf	_cont_display+1,f
   692                           
   693                           ;LAB0.c: 73:                 PORTA = 1;
   694  007D  3001               	movlw	1
   695  007E  0085               	movwf	5	;volatile
   696                           
   697                           ;LAB0.c: 74:                 PORTB = 1;
   698  007F  3001               	movlw	1
   699  0080  0086               	movwf	6	;volatile
   700                           
   701                           ;LAB0.c: 75:             }
   702  0081  289D               	goto	i1l1032
   703  0082                     i1l1020:
   704  0082  087A               	movf	_cont+1,w
   705  0083  3A80               	xorlw	128
   706  0084  00FF               	movwf	btemp+1
   707  0085  3080               	movlw	128
   708  0086  027F               	subwf	btemp+1,w
   709  0087  1D03               	skipz
   710  0088  288B               	goto	u27_25
   711  0089  303C               	movlw	60
   712  008A  0279               	subwf	_cont,w
   713  008B                     u27_25:
   714  008B  1C03               	skipc
   715  008C  288E               	goto	u27_21
   716  008D  288F               	goto	u27_20
   717  008E                     u27_21:
   718  008E  289D               	goto	i1l1032
   719  008F                     u27_20:
   720  008F                     i1l1022:
   721                           
   722                           ;LAB0.c: 77:                 PORTD = 7;
   723  008F  3007               	movlw	7
   724  0090  1283               	bcf	3,5	;RP0=0, select bank0
   725  0091  1303               	bcf	3,6	;RP1=0, select bank0
   726  0092  0088               	movwf	8	;volatile
   727  0093                     i1l1024:
   728                           
   729                           ;LAB0.c: 78:                 cont = 0;
   730  0093  01F9               	clrf	_cont
   731  0094  01FA               	clrf	_cont+1
   732  0095                     i1l1026:
   733                           
   734                           ;LAB0.c: 79:                 cont_display = 0;
   735  0095  01A2               	clrf	_cont_display
   736  0096  01A3               	clrf	_cont_display+1
   737  0097                     i1l1028:
   738                           
   739                           ;LAB0.c: 80:                 cuenta_atras = 0;
   740  0097  01FB               	clrf	_cuenta_atras
   741  0098  01FC               	clrf	_cuenta_atras+1
   742  0099                     i1l1030:
   743                           
   744                           ;LAB0.c: 81:                 inicio_carrera = 1;
   745  0099  3001               	movlw	1
   746  009A  00F7               	movwf	_inicio_carrera
   747  009B  3000               	movlw	0
   748  009C  00F8               	movwf	_inicio_carrera+1
   749  009D                     i1l1032:
   750                           
   751                           ;LAB0.c: 83:             PORTC = tabla(cont_display);
   752  009D  1283               	bcf	3,5	;RP0=0, select bank0
   753  009E  1303               	bcf	3,6	;RP1=0, select bank0
   754  009F  0823               	movf	_cont_display+1,w
   755  00A0  00F1               	movwf	tabla@a+1
   756  00A1  0822               	movf	_cont_display,w
   757  00A2  00F0               	movwf	tabla@a
   758  00A3  120A  118A  211A  120A  118A  	fcall	_tabla
   759  00A8  0870               	movf	?_tabla,w
   760  00A9  1283               	bcf	3,5	;RP0=0, select bank0
   761  00AA  1303               	bcf	3,6	;RP1=0, select bank0
   762  00AB  0087               	movwf	7	;volatile
   763                           
   764                           ;LAB0.c: 84:         }
   765  00AC  28F5               	goto	i1l1066
   766  00AD                     i1l1034:
   767  00AD  087B               	movf	_cuenta_atras,w
   768  00AE  047C               	iorwf	_cuenta_atras+1,w
   769  00AF  1D03               	btfss	3,2
   770  00B0  28B2               	goto	u28_21
   771  00B1  28B3               	goto	u28_20
   772  00B2                     u28_21:
   773  00B2  28F5               	goto	i1l1066
   774  00B3                     u28_20:
   775  00B3                     i1l1036:
   776                           
   777                           ;LAB0.c: 88:             if(PORTEbits.RE1 == 1 && inicio_carrera == 1){
   778  00B3  1C89               	btfss	9,1	;volatile
   779  00B4  28B6               	goto	u29_21
   780  00B5  28B7               	goto	u29_20
   781  00B6                     u29_21:
   782  00B6  28C5               	goto	i1l1044
   783  00B7                     u29_20:
   784  00B7                     i1l1038:
   785  00B7  0377               	decf	_inicio_carrera,w
   786  00B8  0478               	iorwf	_inicio_carrera+1,w
   787  00B9  1D03               	btfss	3,2
   788  00BA  28BC               	goto	u30_21
   789  00BB  28BD               	goto	u30_20
   790  00BC                     u30_21:
   791  00BC  28C5               	goto	i1l1044
   792  00BD                     u30_20:
   793  00BD                     i1l71:
   794  00BD  1889               	btfsc	9,1	;volatile
   795  00BE  28C0               	goto	u31_21
   796  00BF  28C1               	goto	u31_20
   797  00C0                     u31_21:
   798  00C0  28BD               	goto	i1l71
   799  00C1                     u31_20:
   800  00C1                     i1l1042:
   801                           
   802                           ;LAB0.c: 90:                 PORTA = PORTA*2;
   803  00C1  0805               	movf	5,w	;volatile
   804  00C2  00F2               	movwf	??_isr
   805  00C3  0772               	addwf	??_isr,w
   806  00C4  0085               	movwf	5	;volatile
   807  00C5                     i1l1044:
   808                           
   809                           ;LAB0.c: 92:             if(PORTEbits.RE2 == 1 && inicio_carrera == 1){
   810  00C5  1D09               	btfss	9,2	;volatile
   811  00C6  28C8               	goto	u32_21
   812  00C7  28C9               	goto	u32_20
   813  00C8                     u32_21:
   814  00C8  28D7               	goto	i1l74
   815  00C9                     u32_20:
   816  00C9                     i1l1046:
   817  00C9  0377               	decf	_inicio_carrera,w
   818  00CA  0478               	iorwf	_inicio_carrera+1,w
   819  00CB  1D03               	btfss	3,2
   820  00CC  28CE               	goto	u33_21
   821  00CD  28CF               	goto	u33_20
   822  00CE                     u33_21:
   823  00CE  28D7               	goto	i1l74
   824  00CF                     u33_20:
   825  00CF                     i1l75:
   826  00CF  1909               	btfsc	9,2	;volatile
   827  00D0  28D2               	goto	u34_21
   828  00D1  28D3               	goto	u34_20
   829  00D2                     u34_21:
   830  00D2  28CF               	goto	i1l75
   831  00D3                     u34_20:
   832  00D3                     i1l1050:
   833                           
   834                           ;LAB0.c: 94:                 PORTB = PORTB*2;
   835  00D3  0806               	movf	6,w	;volatile
   836  00D4  00F2               	movwf	??_isr
   837  00D5  0772               	addwf	??_isr,w
   838  00D6  0086               	movwf	6	;volatile
   839  00D7                     i1l74:	
   840                           ;LAB0.c: 95:             }
   841                           
   842                           
   843                           ;LAB0.c: 96:             if(PORTA == 128 && PORTB < 128){
   844  00D7  3080               	movlw	128
   845  00D8  0605               	xorwf	5,w	;volatile
   846  00D9  1D03               	btfss	3,2
   847  00DA  28DC               	goto	u35_21
   848  00DB  28DD               	goto	u35_20
   849  00DC                     u35_21:
   850  00DC  28E6               	goto	i1l1058
   851  00DD                     u35_20:
   852  00DD                     i1l1052:
   853  00DD  3080               	movlw	128
   854  00DE  0206               	subwf	6,w	;volatile
   855  00DF  1803               	skipnc
   856  00E0  28E2               	goto	u36_21
   857  00E1  28E3               	goto	u36_20
   858  00E2                     u36_21:
   859  00E2  28E6               	goto	i1l1058
   860  00E3                     u36_20:
   861  00E3                     i1l1054:
   862                           
   863                           ;LAB0.c: 97:                 PORTDbits.RD6 = 1;
   864  00E3  1708               	bsf	8,6	;volatile
   865  00E4                     i1l1056:
   866                           
   867                           ;LAB0.c: 98:                 PORTC = 0b00000110;
   868  00E4  3006               	movlw	6
   869  00E5  0087               	movwf	7	;volatile
   870  00E6                     i1l1058:
   871                           
   872                           ;LAB0.c: 100:             if(PORTB == 128 && PORTA < 128){
   873  00E6  3080               	movlw	128
   874  00E7  0606               	xorwf	6,w	;volatile
   875  00E8  1D03               	btfss	3,2
   876  00E9  28EB               	goto	u37_21
   877  00EA  28EC               	goto	u37_20
   878  00EB                     u37_21:
   879  00EB  28F5               	goto	i1l1066
   880  00EC                     u37_20:
   881  00EC                     i1l1060:
   882  00EC  3080               	movlw	128
   883  00ED  0205               	subwf	5,w	;volatile
   884  00EE  1803               	skipnc
   885  00EF  28F1               	goto	u38_21
   886  00F0  28F2               	goto	u38_20
   887  00F1                     u38_21:
   888  00F1  28F5               	goto	i1l1066
   889  00F2                     u38_20:
   890  00F2                     i1l1062:
   891                           
   892                           ;LAB0.c: 101:                 PORTDbits.RD7 = 1;
   893  00F2  1788               	bsf	8,7	;volatile
   894  00F3                     i1l1064:
   895                           
   896                           ;LAB0.c: 102:                 PORTC = 0b01011011;
   897  00F3  305B               	movlw	91
   898  00F4  0087               	movwf	7	;volatile
   899  00F5                     i1l1066:
   900                           
   901                           ;LAB0.c: 107:         if(PORTEbits.RE3){
   902  00F5  1D89               	btfss	9,3	;volatile
   903  00F6  28F8               	goto	u39_21
   904  00F7  28F9               	goto	u39_20
   905  00F8                     u39_21:
   906  00F8  290F               	goto	i1l84
   907  00F9                     u39_20:
   908  00F9                     i1l81:
   909  00F9  1989               	btfsc	9,3	;volatile
   910  00FA  28FC               	goto	u40_21
   911  00FB  28FD               	goto	u40_20
   912  00FC                     u40_21:
   913  00FC  28F9               	goto	i1l81
   914  00FD                     u40_20:
   915  00FD                     i1l1070:
   916                           
   917                           ;LAB0.c: 109:             cont_display = 3;
   918  00FD  3003               	movlw	3
   919  00FE  00A2               	movwf	_cont_display
   920  00FF  3000               	movlw	0
   921  0100  00A3               	movwf	_cont_display+1
   922  0101                     i1l1072:
   923                           
   924                           ;LAB0.c: 110:             timer_iniciado = 0;
   925  0101  01A0               	clrf	_timer_iniciado
   926  0102  01A1               	clrf	_timer_iniciado+1
   927  0103                     i1l1074:
   928                           
   929                           ;LAB0.c: 111:             cuenta_atras = 1;
   930  0103  3001               	movlw	1
   931  0104  00FB               	movwf	_cuenta_atras
   932  0105  3000               	movlw	0
   933  0106  00FC               	movwf	_cuenta_atras+1
   934                           
   935                           ;LAB0.c: 112:             inicio_carrera = 0;
   936  0107  01F7               	clrf	_inicio_carrera
   937  0108  01F8               	clrf	_inicio_carrera+1
   938                           
   939                           ;LAB0.c: 113:             cont = 0;
   940  0109  01F9               	clrf	_cont
   941  010A  01FA               	clrf	_cont+1
   942                           
   943                           ;LAB0.c: 114:             PORTA = 0;
   944  010B  0185               	clrf	5	;volatile
   945                           
   946                           ;LAB0.c: 115:             PORTB = 0;
   947  010C  0186               	clrf	6	;volatile
   948                           
   949                           ;LAB0.c: 116:             PORTC = 0;
   950  010D  0187               	clrf	7	;volatile
   951                           
   952                           ;LAB0.c: 117:             PORTD = 0;
   953  010E  0188               	clrf	8	;volatile
   954  010F                     i1l84:
   955  010F  0876               	movf	??_isr+4,w
   956  0110  00FF               	movwf	btemp+1
   957  0111  0875               	movf	??_isr+3,w
   958  0112  008A               	movwf	10
   959  0113  0874               	movf	??_isr+2,w
   960  0114  0084               	movwf	4
   961  0115  0E73               	swapf	??_isr+1,w
   962  0116  0083               	movwf	3
   963  0117  0EFE               	swapf	btemp,f
   964  0118  0E7E               	swapf	btemp,w
   965  0119  0009               	retfie
   966  011A                     __end_of_isr:
   967                           
   968                           	psect	intentry
   969  0004                     __pintentry:	
   970                           ;incstack = 0
   971                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   972                           
   973  0004                     interrupt_function:
   974  007E                     saved_w	set	btemp
   975  0004  00FE               	movwf	btemp
   976  0005  0E03               	swapf	3,w
   977  0006  00F3               	movwf	??_isr+1
   978  0007  0804               	movf	4,w
   979  0008  00F4               	movwf	??_isr+2
   980  0009  080A               	movf	10,w
   981  000A  00F5               	movwf	??_isr+3
   982  000B  1283               	bcf	3,5	;RP0=0, select bank0
   983  000C  1303               	bcf	3,6	;RP1=0, select bank0
   984  000D  087F               	movf	btemp+1,w
   985  000E  00F6               	movwf	??_isr+4
   986  000F  120A  118A  2837   	ljmp	_isr
   987                           
   988                           	psect	text3
   989  01A4                     __ptext3:	
   990 ;; *************** function _tmr0 *****************
   991 ;; Defined at:
   992 ;;		line 172 in file "LAB0.c"
   993 ;; Parameters:    Size  Location     Type
   994 ;;		None
   995 ;; Auto vars:     Size  Location     Type
   996 ;;		None
   997 ;; Return value:  Size  Location     Type
   998 ;;                  1    wreg      void 
   999 ;; Registers used:
  1000 ;;		wreg
  1001 ;; Tracked objects:
  1002 ;;		On entry : 0/0
  1003 ;;		On exit  : 0/0
  1004 ;;		Unchanged: 0/0
  1005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1006 ;;      Params:         0       0       0       0       0
  1007 ;;      Locals:         0       0       0       0       0
  1008 ;;      Temps:          0       0       0       0       0
  1009 ;;      Totals:         0       0       0       0       0
  1010 ;;Total ram usage:        0 bytes
  1011 ;; Hardware stack levels used: 1
  1012 ;; This function calls:
  1013 ;;		Nothing
  1014 ;; This function is called by:
  1015 ;;		_isr
  1016 ;; This function uses a non-reentrant model
  1017 ;;
  1018                           
  1019                           
  1020                           ;psect for function _tmr0
  1021  01A4                     _tmr0:
  1022  01A4                     i1l922:	
  1023                           ;incstack = 0
  1024                           ; Regs used in _tmr0: [wreg]
  1025                           
  1026                           
  1027                           ;LAB0.c: 173:     INTCONbits.T0IF = 0;
  1028  01A4  110B               	bcf	11,2	;volatile
  1029  01A5                     i1l924:
  1030                           
  1031                           ;LAB0.c: 174:     TMR0 = 61;
  1032  01A5  303D               	movlw	61
  1033  01A6  1283               	bcf	3,5	;RP0=0, select bank0
  1034  01A7  1303               	bcf	3,6	;RP1=0, select bank0
  1035  01A8  0081               	movwf	1	;volatile
  1036  01A9                     i1l98:
  1037  01A9  0008               	return
  1038  01AA                     __end_of_tmr0:
  1039                           
  1040                           	psect	text4
  1041  011A                     __ptext4:	
  1042 ;; *************** function _tabla *****************
  1043 ;; Defined at:
  1044 ;;		line 178 in file "LAB0.c"
  1045 ;; Parameters:    Size  Location     Type
  1046 ;;  a               2    0[COMMON] int 
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;		None
  1049 ;; Return value:  Size  Location     Type
  1050 ;;                  2    0[COMMON] int 
  1051 ;; Registers used:
  1052 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1053 ;; Tracked objects:
  1054 ;;		On entry : 0/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1058 ;;      Params:         2       0       0       0       0
  1059 ;;      Locals:         0       0       0       0       0
  1060 ;;      Temps:          0       0       0       0       0
  1061 ;;      Totals:         2       0       0       0       0
  1062 ;;Total ram usage:        2 bytes
  1063 ;; Hardware stack levels used: 1
  1064 ;; This function calls:
  1065 ;;		Nothing
  1066 ;; This function is called by:
  1067 ;;		_isr
  1068 ;; This function uses a non-reentrant model
  1069 ;;
  1070                           
  1071                           
  1072                           ;psect for function _tabla
  1073  011A                     _tabla:
  1074  011A                     i1l928:	
  1075                           ;incstack = 0
  1076                           ; Regs used in _tabla: [wreg-fsr0h+status,2+status,0]
  1077                           
  1078                           
  1079                           ;LAB0.c: 179:     switch (a){
  1080  011A  294D               	goto	i1l992
  1081  011B                     i1l930:
  1082                           
  1083                           ;LAB0.c: 181:             return 0b00111111;
  1084  011B  303F               	movlw	63
  1085  011C  00F0               	movwf	?_tabla
  1086  011D  3000               	movlw	0
  1087  011E  00F1               	movwf	?_tabla+1
  1088  011F  2972               	goto	i1l103
  1089  0120                     i1l936:
  1090                           
  1091                           ;LAB0.c: 184:             return 0b00000110;
  1092  0120  3006               	movlw	6
  1093  0121  00F0               	movwf	?_tabla
  1094  0122  3000               	movlw	0
  1095  0123  00F1               	movwf	?_tabla+1
  1096  0124  2972               	goto	i1l103
  1097  0125                     i1l942:
  1098                           
  1099                           ;LAB0.c: 187:             return 0b01011011;
  1100  0125  305B               	movlw	91
  1101  0126  00F0               	movwf	?_tabla
  1102  0127  3000               	movlw	0
  1103  0128  00F1               	movwf	?_tabla+1
  1104  0129  2972               	goto	i1l103
  1105  012A                     i1l948:
  1106                           
  1107                           ;LAB0.c: 190:             return 0b01001111;
  1108  012A  304F               	movlw	79
  1109  012B  00F0               	movwf	?_tabla
  1110  012C  3000               	movlw	0
  1111  012D  00F1               	movwf	?_tabla+1
  1112  012E  2972               	goto	i1l103
  1113  012F                     i1l954:
  1114                           
  1115                           ;LAB0.c: 193:             return 0b01100110;
  1116  012F  3066               	movlw	102
  1117  0130  00F0               	movwf	?_tabla
  1118  0131  3000               	movlw	0
  1119  0132  00F1               	movwf	?_tabla+1
  1120  0133  2972               	goto	i1l103
  1121  0134                     i1l960:
  1122                           
  1123                           ;LAB0.c: 196:             return 0b01101101;
  1124  0134  306D               	movlw	109
  1125  0135  00F0               	movwf	?_tabla
  1126  0136  3000               	movlw	0
  1127  0137  00F1               	movwf	?_tabla+1
  1128  0138  2972               	goto	i1l103
  1129  0139                     i1l966:
  1130                           
  1131                           ;LAB0.c: 199:             return 0b01111101;
  1132  0139  307D               	movlw	125
  1133  013A  00F0               	movwf	?_tabla
  1134  013B  3000               	movlw	0
  1135  013C  00F1               	movwf	?_tabla+1
  1136  013D  2972               	goto	i1l103
  1137  013E                     i1l972:
  1138                           
  1139                           ;LAB0.c: 202:             return 0b00000111;
  1140  013E  3007               	movlw	7
  1141  013F  00F0               	movwf	?_tabla
  1142  0140  3000               	movlw	0
  1143  0141  00F1               	movwf	?_tabla+1
  1144  0142  2972               	goto	i1l103
  1145  0143                     i1l978:
  1146                           
  1147                           ;LAB0.c: 205:             return 0b01111111;
  1148  0143  307F               	movlw	127
  1149  0144  00F0               	movwf	?_tabla
  1150  0145  3000               	movlw	0
  1151  0146  00F1               	movwf	?_tabla+1
  1152  0147  2972               	goto	i1l103
  1153  0148                     i1l984:
  1154                           
  1155                           ;LAB0.c: 208:             return 0b01101111;
  1156  0148  306F               	movlw	111
  1157  0149  00F0               	movwf	?_tabla
  1158  014A  3000               	movlw	0
  1159  014B  00F1               	movwf	?_tabla+1
  1160  014C  2972               	goto	i1l103
  1161  014D                     i1l992:
  1162                           
  1163                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1164                           ; Switch size 1, requested type "simple"
  1165                           ; Number of cases is 1, Range of values is 0 to 0
  1166                           ; switch strategies available:
  1167                           ; Name         Instructions Cycles
  1168                           ; simple_byte            4     3 (average)
  1169                           ; direct_byte           11     8 (fixed)
  1170                           ; jumptable            260     6 (fixed)
  1171                           ;	Chosen strategy is simple_byte
  1172  014D  0871               	movf	tabla@a+1,w
  1173  014E  3A00               	xorlw	0	; case 0
  1174  014F  1903               	skipnz
  1175  0150  2952               	goto	i1l1158
  1176  0151  2972               	goto	i1l103
  1177  0152                     i1l1158:
  1178                           
  1179                           ; Switch size 1, requested type "simple"
  1180                           ; Number of cases is 10, Range of values is 0 to 9
  1181                           ; switch strategies available:
  1182                           ; Name         Instructions Cycles
  1183                           ; simple_byte           31    16 (average)
  1184                           ; direct_byte           38     8 (fixed)
  1185                           ; jumptable            260     6 (fixed)
  1186                           ;	Chosen strategy is simple_byte
  1187  0152  0870               	movf	tabla@a,w
  1188  0153  3A00               	xorlw	0	; case 0
  1189  0154  1903               	skipnz
  1190  0155  291B               	goto	i1l930
  1191  0156  3A01               	xorlw	1	; case 1
  1192  0157  1903               	skipnz
  1193  0158  2920               	goto	i1l936
  1194  0159  3A03               	xorlw	3	; case 2
  1195  015A  1903               	skipnz
  1196  015B  2925               	goto	i1l942
  1197  015C  3A01               	xorlw	1	; case 3
  1198  015D  1903               	skipnz
  1199  015E  292A               	goto	i1l948
  1200  015F  3A07               	xorlw	7	; case 4
  1201  0160  1903               	skipnz
  1202  0161  292F               	goto	i1l954
  1203  0162  3A01               	xorlw	1	; case 5
  1204  0163  1903               	skipnz
  1205  0164  2934               	goto	i1l960
  1206  0165  3A03               	xorlw	3	; case 6
  1207  0166  1903               	skipnz
  1208  0167  2939               	goto	i1l966
  1209  0168  3A01               	xorlw	1	; case 7
  1210  0169  1903               	skipnz
  1211  016A  293E               	goto	i1l972
  1212  016B  3A0F               	xorlw	15	; case 8
  1213  016C  1903               	skipnz
  1214  016D  2943               	goto	i1l978
  1215  016E  3A01               	xorlw	1	; case 9
  1216  016F  1903               	skipnz
  1217  0170  2948               	goto	i1l984
  1218  0171  2972               	goto	i1l103
  1219  0172                     i1l103:
  1220  0172  0008               	return
  1221  0173                     __end_of_tabla:
  1222  007E                     btemp	set	126	;btemp
  1223  007E                     wtemp0	set	126
  1224                           
  1225                           	psect	config
  1226                           
  1227                           ;Config register CONFIG1 @ 0x2007
  1228                           ;	Oscillator Selection bits
  1229                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1230                           ;	Watchdog Timer Enable bit
  1231                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1232                           ;	Power-up Timer Enable bit
  1233                           ;	PWRTE = OFF, PWRT disabled
  1234                           ;	RE3/MCLR pin function select bit
  1235                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1236                           ;	Code Protection bit
  1237                           ;	CP = OFF, Program memory code protection is disabled
  1238                           ;	Data Code Protection bit
  1239                           ;	CPD = OFF, Data memory code protection is disabled
  1240                           ;	Brown Out Reset Selection bits
  1241                           ;	BOREN = OFF, BOR disabled
  1242                           ;	Internal External Switchover bit
  1243                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1244                           ;	Fail-Safe Clock Monitor Enabled bit
  1245                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1246                           ;	Low Voltage Programming Enable bit
  1247                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1248                           ;	In-Circuit Debugger Mode bit
  1249                           ;	DEBUG = 0x1, unprogrammed default
  1250  2007                     	org	8199
  1251  2007  20D4               	dw	8404
  1252                           
  1253                           ;Config register CONFIG2 @ 0x2008
  1254                           ;	Brown-out Reset Selection bit
  1255                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1256                           ;	Flash Program Memory Self Write Enable bits
  1257                           ;	WRT = OFF, Write protection off
  1258  2008                     	org	8200
  1259  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      13
    BANK0            80      0       4
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_tabla

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  5     5      0      98
                                              2 COMMON     5     5      0
                              _tabla
                               _tmr0
 ---------------------------------------------------------------------------------
 (3) _tmr0                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _tabla                                                2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _isr (ROOT)
   _tabla
   _tmr0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       4       5        5.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      11      12        0.0%
ABS                  0      0      11       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Jan 20 10:30:38 2022

                     l90 01A0                       l95 019A                       l89 01A0  
                    _isr 0037                      fsr0 0004                     l1100 017F  
                   l1110 018B                     l1102 0182                     l1120 0190  
                   l1112 018C                     l1104 0183                     l1130 0198  
                   l1122 0191                     l1114 018D                     l1106 0184  
                   l1132 0199                     l1124 0192                     l1116 018E  
                   l1108 0185                     l1126 0196                     l1118 018F  
                   l1128 0197                     l1136 019B                     l1096 0173  
                   l1098 017D                     ?_isr 0070                     _T0IF 005A  
                   i1l60 0047                     i1l71 00BD                     i1l81 00F9  
                   i1l74 00D7                     i1l75 00CF                     i1l84 010F  
                   i1l98 01A9                     _TMR0 0001                     _cont 0079  
                   _main 019B                     _tmr0 01A4                     btemp 007E  
                   start 0012                    ??_isr 0072                    ?_main 0070  
                  ?_tmr0 0070                    _ANSEL 0188                    i1l103 0172  
                  i1l930 011B                    i1l922 01A4                    i1l924 01A5  
                  i1l942 0125                    i1l960 0134                    i1l936 0120  
                  i1l928 011A                    i1l954 012F                    i1l972 013E  
                  i1l948 012A                    i1l966 0139                    i1l984 0148  
                  i1l992 014D                    i1l978 0143                    i1l998 0037  
                  u21_20 003B                    u21_21 003A                    u30_20 00BD  
                  u22_20 0041                    u30_21 00BC                    u22_21 0040  
                  u31_20 00C1                    u23_20 0047                    u31_21 00C0  
                  u23_21 0046                    u40_20 00FD                    u32_20 00C9  
                  u24_20 004B                    u40_21 00FC                    u32_21 00C8  
                  u24_21 004A                    u33_20 00CF                    u25_20 0061  
                  u33_21 00CE                    u25_21 0060                    u34_20 00D3  
                  u26_20 0073                    u34_21 00D2                    u26_21 0072  
                  u35_20 00DD                    u27_20 008F                    u35_21 00DC  
                  u27_21 008E                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    u27_25 008B  
                  u36_20 00E3                    u28_20 00B3                    u36_21 00E2  
                  u28_21 00B2                    u37_20 00EC                    u29_20 00B7  
                  u37_21 00EB                    u29_21 00B6                    u38_20 00F2  
                  u38_21 00F1                    u39_20 00F9                    u39_21 00F8  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _tabla 011A  
                  _setup 0173                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0015             __end_of_main 01A4  
           __end_of_tmr0 01AA                   ??_main 0000                   ??_tmr0 0070  
                 ?_tabla 0070                   ?_setup 0070                   _ANSELH 0189  
                 i1l1000 003B                   i1l1010 0054                   i1l1002 0041  
                 i1l1020 0082                   i1l1012 005A                   i1l1030 0099  
                 i1l1022 008F                   i1l1014 0061                   i1l1006 004B  
                 i1l1024 0093                   i1l1032 009D                   i1l1016 006C  
                 i1l1008 004F                   i1l1050 00D3                   i1l1042 00C1  
                 i1l1026 0095                   i1l1018 0073                   i1l1034 00AD  
                 i1l1060 00EC                   i1l1052 00DD                   i1l1044 00C5  
                 i1l1036 00B3                   i1l1028 0097                   i1l1070 00FD  
                 i1l1062 00F2                   i1l1054 00E3                   i1l1046 00C9  
                 i1l1038 00B7                   i1l1072 0101                   i1l1064 00F3  
                 i1l1056 00E4                   i1l1074 0103                   i1l1058 00E6  
                 i1l1066 00F5                   i1l1158 0152                   tabla@a 0070  
           __pdataCOMMON 007B                   saved_w 007E  __end_of__initialization 0033  
         __pcstackCOMMON 0070             __pidataBANK0 01AC            __end_of_tabla 0173  
          __end_of_setup 019B           _OPTION_REGbits 0081                  ??_tabla 0072  
                ??_setup 0000               __pbssBANK0 0020               __pmaintext 019B  
             __pintentry 0004           _inicio_carrera 0077                  __ptext1 0173  
                __ptext2 0037                  __ptext3 01A4                  __ptext4 011A  
           __size_of_isr 00E3     end_of_initialization 0033                _PORTDbits 0008  
              _PORTEbits 0009             _cont_display 0022             _cuenta_atras 007B  
          __pidataCOMMON 01AA      start_initialization 0015              __end_of_isr 011A  
            __pdataBANK0 0022              __pbssCOMMON 0077                ___latbits 0002  
          __pcstackBANK0 0000           __size_of_tabla 0059           __size_of_setup 0028  
      interrupt_function 0004           _timer_iniciado 0020            __size_of_main 0009  
          __size_of_tmr0 0006               _INTCONbits 000B                 intlevel1 0000  
             _OSCCONbits 008F  
