

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jan 19 21:38:12 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210                           
   211                           	psect	idataCOMMON
   212  014D                     __pidataCOMMON:
   213                           
   214                           ;initializer for _cuenta_atras
   215  014D  3401               	retlw	1
   216  014E  3400               	retlw	0
   217                           
   218                           ;initializer for _cont_display
   219  014F  3403               	retlw	3
   220  0150  3400               	retlw	0
   221  000C                     _PIR1bits	set	12
   222  000B                     _INTCONbits	set	11
   223  0001                     _TMR0	set	1
   224  0006                     _PORTB	set	6
   225  0005                     _PORTA	set	5
   226  0007                     _PORTC	set	7
   227  0008                     _PORTD	set	8
   228  0009                     _PORTEbits	set	9
   229  005A                     _T0IF	set	90
   230  008C                     _PIE1bits	set	140
   231  0081                     _OPTION_REGbits	set	129
   232  008F                     _OSCCONbits	set	143
   233  0089                     _TRISE	set	137
   234  0088                     _TRISD	set	136
   235  0087                     _TRISC	set	135
   236  0086                     _TRISB	set	134
   237  0085                     _TRISA	set	133
   238  0189                     _ANSELH	set	393
   239  0188                     _ANSEL	set	392
   240                           
   241                           	psect	cinit
   242  0015                     start_initialization:	
   243                           ; #config settings
   244                           
   245  0015                     __initialization:
   246                           
   247                           ; Initialize objects allocated to COMMON
   248  0015  120A  118A  214D  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   249  001A  00FA               	movwf	__pdataCOMMON& (0+127)
   250  001B  120A  118A  214E  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   251  0020  00FB               	movwf	(__pdataCOMMON+1)& (0+127)
   252  0021  120A  118A  214F  120A  118A  	fcall	__pidataCOMMON+2	;fetch initializer
   253  0026  00FC               	movwf	(__pdataCOMMON+2)& (0+127)
   254  0027  120A  118A  2150  120A  118A  	fcall	__pidataCOMMON+3	;fetch initializer
   255  002C  00FD               	movwf	(__pdataCOMMON+3)& (0+127)
   256                           
   257                           ; Clear objects allocated to BANK0
   258  002D  01A0               	clrf	__pbssBANK0& (0+127)
   259  002E  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   260                           
   261                           ; Clear objects allocated to COMMON
   262  002F  01F6               	clrf	__pbssCOMMON& (0+127)
   263  0030  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   264  0031  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   265  0032  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   266  0033                     end_of_initialization:	
   267                           ;End of C runtime variable initialization code
   268                           
   269  0033                     __end_of__initialization:
   270  0033  0183               	clrf	3
   271  0034  120A  118A  293E   	ljmp	_main	;jump to C main() function
   272                           
   273                           	psect	bssCOMMON
   274  0076                     __pbssCOMMON:
   275  0076                     _timer_iniciado:
   276  0076                     	ds	2
   277  0078                     _cont:
   278  0078                     	ds	2
   279                           
   280                           	psect	dataCOMMON
   281  007A                     __pdataCOMMON:
   282  007A                     _cuenta_atras:
   283  007A                     	ds	2
   284  007C                     _cont_display:
   285  007C                     	ds	2
   286                           
   287                           	psect	bssBANK0
   288  0020                     __pbssBANK0:
   289  0020                     _inicio_carrera:
   290  0020                     	ds	2
   291                           
   292                           	psect	cstackCOMMON
   293  0070                     __pcstackCOMMON:
   294  0070                     ?_tmr0:
   295  0070                     ??_tmr0:	
   296                           ; 1 bytes @ 0x0
   297                           
   298  0070                     ?_setup:	
   299                           ; 1 bytes @ 0x0
   300                           
   301  0070                     ?_isr:	
   302                           ; 1 bytes @ 0x0
   303                           
   304  0070                     ?_main:	
   305                           ; 1 bytes @ 0x0
   306                           
   307  0070                     ?_tabla:	
   308                           ; 1 bytes @ 0x0
   309                           
   310  0070                     tabla@a:	
   311                           ; 2 bytes @ 0x0
   312                           
   313                           
   314                           ; 2 bytes @ 0x0
   315  0070                     	ds	2
   316  0072                     ??_tabla:
   317  0072                     ??_isr:	
   318                           ; 1 bytes @ 0x2
   319                           
   320                           
   321                           ; 1 bytes @ 0x2
   322  0072                     	ds	4
   323                           
   324                           	psect	cstackBANK0
   325  0000                     __pcstackBANK0:
   326  0000                     ??_setup:
   327  0000                     ??_main:	
   328                           ; 1 bytes @ 0x0
   329                           
   330                           
   331                           	psect	maintext
   332  013E                     __pmaintext:	
   333                           ; 1 bytes @ 0x0
   334 ;;
   335 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   336 ;;
   337 ;; *************** function _main *****************
   338 ;; Defined at:
   339 ;;		line 88 in file "LAB0.c"
   340 ;; Parameters:    Size  Location     Type
   341 ;;		None
   342 ;; Auto vars:     Size  Location     Type
   343 ;;		None
   344 ;; Return value:  Size  Location     Type
   345 ;;                  1    wreg      void 
   346 ;; Registers used:
   347 ;;		wreg, status,2, status,0, pclath, cstack
   348 ;; Tracked objects:
   349 ;;		On entry : B00/0
   350 ;;		On exit  : 0/0
   351 ;;		Unchanged: 0/0
   352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   353 ;;      Params:         0       0       0       0       0
   354 ;;      Locals:         0       0       0       0       0
   355 ;;      Temps:          0       0       0       0       0
   356 ;;      Totals:         0       0       0       0       0
   357 ;;Total ram usage:        0 bytes
   358 ;; Hardware stack levels required when called: 3
   359 ;; This function calls:
   360 ;;		_setup
   361 ;; This function is called by:
   362 ;;		Startup code after reset
   363 ;; This function uses a non-reentrant model
   364 ;;
   365                           
   366                           
   367                           ;psect for function _main
   368  013E                     _main:
   369  013E                     l1055:	
   370                           ;incstack = 0
   371                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   372                           
   373                           
   374                           ;LAB0.c: 89:     setup();
   375  013E  120A  118A  2112  120A  118A  	fcall	_setup
   376  0143                     l75:	
   377                           ;LAB0.c: 90:     while(1){
   378                           
   379  0143                     l76:	
   380                           ;LAB0.c: 92:     }
   381                           
   382  0143  2943               	goto	l75
   383  0144  120A  118A  2812   	ljmp	start
   384  0147                     __end_of_main:
   385                           
   386                           	psect	text1
   387  0112                     __ptext1:	
   388 ;; *************** function _setup *****************
   389 ;; Defined at:
   390 ;;		line 96 in file "LAB0.c"
   391 ;; Parameters:    Size  Location     Type
   392 ;;		None
   393 ;; Auto vars:     Size  Location     Type
   394 ;;		None
   395 ;; Return value:  Size  Location     Type
   396 ;;                  1    wreg      void 
   397 ;; Registers used:
   398 ;;		wreg, status,2, status,0
   399 ;; Tracked objects:
   400 ;;		On entry : 0/0
   401 ;;		On exit  : 0/0
   402 ;;		Unchanged: 0/0
   403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   404 ;;      Params:         0       0       0       0       0
   405 ;;      Locals:         0       0       0       0       0
   406 ;;      Temps:          0       0       0       0       0
   407 ;;      Totals:         0       0       0       0       0
   408 ;;Total ram usage:        0 bytes
   409 ;; Hardware stack levels used: 1
   410 ;; Hardware stack levels required when called: 2
   411 ;; This function calls:
   412 ;;		Nothing
   413 ;; This function is called by:
   414 ;;		_main
   415 ;; This function uses a non-reentrant model
   416 ;;
   417                           
   418                           
   419                           ;psect for function _setup
   420  0112                     _setup:
   421  0112                     l1011:	
   422                           ;incstack = 0
   423                           ; Regs used in _setup: [wreg+status,2+status,0]
   424                           
   425                           
   426                           ;LAB0.c: 99:     ANSEL = 0;
   427  0112  1683               	bsf	3,5	;RP0=1, select bank3
   428  0113  1703               	bsf	3,6	;RP1=1, select bank3
   429  0114  0188               	clrf	8	;volatile
   430                           
   431                           ;LAB0.c: 100:     ANSELH = 0;
   432  0115  0189               	clrf	9	;volatile
   433                           
   434                           ;LAB0.c: 102:     TRISA = 0;
   435  0116  1683               	bsf	3,5	;RP0=1, select bank1
   436  0117  1303               	bcf	3,6	;RP1=0, select bank1
   437  0118  0185               	clrf	5	;volatile
   438                           
   439                           ;LAB0.c: 103:     TRISB = 0;
   440  0119  0186               	clrf	6	;volatile
   441                           
   442                           ;LAB0.c: 104:     TRISC = 0;
   443  011A  0187               	clrf	7	;volatile
   444                           
   445                           ;LAB0.c: 105:     TRISD = 0;
   446  011B  0188               	clrf	8	;volatile
   447  011C                     l1013:
   448                           
   449                           ;LAB0.c: 106:     TRISE = 0b00000111;
   450  011C  3007               	movlw	7
   451  011D  0089               	movwf	9	;volatile
   452  011E                     l1015:
   453                           
   454                           ;LAB0.c: 108:     PORTA = 0;
   455  011E  1283               	bcf	3,5	;RP0=0, select bank0
   456  011F  1303               	bcf	3,6	;RP1=0, select bank0
   457  0120  0185               	clrf	5	;volatile
   458  0121                     l1017:
   459                           
   460                           ;LAB0.c: 109:     PORTD = 0;
   461  0121  0188               	clrf	8	;volatile
   462  0122                     l1019:
   463                           
   464                           ;LAB0.c: 110:     PORTB = 0;
   465  0122  0186               	clrf	6	;volatile
   466  0123                     l1021:
   467                           
   468                           ;LAB0.c: 111:     PORTC = 0;
   469  0123  0187               	clrf	7	;volatile
   470  0124                     l1023:
   471                           
   472                           ;LAB0.c: 114:     OSCCONbits.IRCF = 0b0110;
   473  0124  1683               	bsf	3,5	;RP0=1, select bank1
   474  0125  1303               	bcf	3,6	;RP1=0, select bank1
   475  0126  080F               	movf	15,w	;volatile
   476  0127  398F               	andlw	-113
   477  0128  3860               	iorlw	96
   478  0129  008F               	movwf	15	;volatile
   479  012A                     l1025:
   480                           
   481                           ;LAB0.c: 115:     OSCCONbits.SCS = 1;
   482  012A  140F               	bsf	15,0	;volatile
   483  012B                     l1027:
   484                           
   485                           ;LAB0.c: 118:     OPTION_REGbits.T0CS = 0;
   486  012B  1281               	bcf	1,5	;volatile
   487  012C                     l1029:
   488                           
   489                           ;LAB0.c: 119:     OPTION_REGbits.T0SE = 0;
   490  012C  1201               	bcf	1,4	;volatile
   491  012D                     l1031:
   492                           
   493                           ;LAB0.c: 120:     OPTION_REGbits.PSA = 0;
   494  012D  1181               	bcf	1,3	;volatile
   495  012E                     l1033:
   496                           
   497                           ;LAB0.c: 121:     OPTION_REGbits.PS2 = 1;
   498  012E  1501               	bsf	1,2	;volatile
   499  012F                     l1035:
   500                           
   501                           ;LAB0.c: 122:     OPTION_REGbits.PS1 = 1;
   502  012F  1481               	bsf	1,1	;volatile
   503  0130                     l1037:
   504                           
   505                           ;LAB0.c: 123:     OPTION_REGbits.PS0 = 1;
   506  0130  1401               	bsf	1,0	;volatile
   507  0131                     l1039:
   508                           
   509                           ;LAB0.c: 124:     TMR0 = 61;
   510  0131  303D               	movlw	61
   511  0132  1283               	bcf	3,5	;RP0=0, select bank0
   512  0133  1303               	bcf	3,6	;RP1=0, select bank0
   513  0134  0081               	movwf	1	;volatile
   514  0135                     l1041:
   515                           
   516                           ;LAB0.c: 127:     INTCONbits.T0IF = 0;
   517  0135  110B               	bcf	11,2	;volatile
   518  0136                     l1043:
   519                           
   520                           ;LAB0.c: 128:     INTCONbits.T0IE = 1;
   521  0136  168B               	bsf	11,5	;volatile
   522  0137                     l1045:
   523                           
   524                           ;LAB0.c: 129:     INTCONbits.GIE = 1;
   525  0137  178B               	bsf	11,7	;volatile
   526  0138                     l1047:
   527                           
   528                           ;LAB0.c: 130:     PIR1bits.ADIF = 0;
   529  0138  130C               	bcf	12,6	;volatile
   530  0139                     l1049:
   531                           
   532                           ;LAB0.c: 131:     PIE1bits.ADIE = 1;
   533  0139  1683               	bsf	3,5	;RP0=1, select bank1
   534  013A  1303               	bcf	3,6	;RP1=0, select bank1
   535  013B  170C               	bsf	12,6	;volatile
   536  013C                     l1051:
   537                           
   538                           ;LAB0.c: 132:     INTCONbits.PEIE = 1;
   539  013C  170B               	bsf	11,6	;volatile
   540  013D                     l81:
   541  013D  0008               	return
   542  013E                     __end_of_setup:
   543                           
   544                           	psect	text2
   545  0037                     __ptext2:	
   546 ;; *************** function _isr *****************
   547 ;; Defined at:
   548 ;;		line 57 in file "LAB0.c"
   549 ;; Parameters:    Size  Location     Type
   550 ;;		None
   551 ;; Auto vars:     Size  Location     Type
   552 ;;		None
   553 ;; Return value:  Size  Location     Type
   554 ;;                  1    wreg      void 
   555 ;; Registers used:
   556 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   557 ;; Tracked objects:
   558 ;;		On entry : 0/0
   559 ;;		On exit  : 0/0
   560 ;;		Unchanged: 0/0
   561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   562 ;;      Params:         0       0       0       0       0
   563 ;;      Locals:         0       0       0       0       0
   564 ;;      Temps:          4       0       0       0       0
   565 ;;      Totals:         4       0       0       0       0
   566 ;;Total ram usage:        4 bytes
   567 ;; Hardware stack levels used: 1
   568 ;; Hardware stack levels required when called: 1
   569 ;; This function calls:
   570 ;;		_tabla
   571 ;;		_tmr0
   572 ;; This function is called by:
   573 ;;		Interrupt level 1
   574 ;; This function uses a non-reentrant model
   575 ;;
   576                           
   577                           
   578                           ;psect for function _isr
   579  0037                     _isr:
   580  0037                     i1l955:
   581                           
   582                           ;LAB0.c: 58:     if(T0IF){
   583  0037  1D0B               	btfss	11,2	;volatile
   584  0038  283A               	goto	u8_21
   585  0039  283B               	goto	u8_20
   586  003A                     u8_21:
   587  003A  28A6               	goto	i1l70
   588  003B                     u8_20:
   589  003B                     i1l957:
   590                           
   591                           ;LAB0.c: 59:         if(cuenta_atras == 1){
   592  003B  037A               	decf	_cuenta_atras,w
   593  003C  047B               	iorwf	_cuenta_atras+1,w
   594  003D  1D03               	btfss	3,2
   595  003E  2840               	goto	u9_21
   596  003F  2841               	goto	u9_20
   597  0040                     u9_21:
   598  0040  28A6               	goto	i1l70
   599  0041                     u9_20:
   600  0041                     i1l959:
   601                           
   602                           ;LAB0.c: 60:             if(timer_iniciado == 0){
   603  0041  0876               	movf	_timer_iniciado,w
   604  0042  0477               	iorwf	_timer_iniciado+1,w
   605  0043  1D03               	btfss	3,2
   606  0044  2846               	goto	u10_21
   607  0045  2847               	goto	u10_20
   608  0046                     u10_21:
   609  0046  284F               	goto	i1l965
   610  0047                     u10_20:
   611  0047                     i1l62:
   612  0047  1C09               	btfss	9,0	;volatile
   613  0048  284A               	goto	u11_21
   614  0049  284B               	goto	u11_20
   615  004A                     u11_21:
   616  004A  2847               	goto	i1l62
   617  004B                     u11_20:
   618  004B                     i1l963:
   619                           
   620                           ;LAB0.c: 62:                 timer_iniciado = 1;
   621  004B  3001               	movlw	1
   622  004C  00F6               	movwf	_timer_iniciado
   623  004D  3000               	movlw	0
   624  004E  00F7               	movwf	_timer_iniciado+1
   625  004F                     i1l965:
   626                           
   627                           ;LAB0.c: 64:             tmr0();
   628  004F  120A  118A  2147  120A  118A  	fcall	_tmr0
   629  0054                     i1l967:
   630                           
   631                           ;LAB0.c: 65:             cont ++;
   632  0054  3001               	movlw	1
   633  0055  07F8               	addwf	_cont,f
   634  0056  1803               	skipnc
   635  0057  0AF9               	incf	_cont+1,f
   636  0058  3000               	movlw	0
   637  0059  07F9               	addwf	_cont+1,f
   638  005A                     i1l969:
   639                           
   640                           ;LAB0.c: 66:             if(cont == 20){
   641  005A  3014               	movlw	20
   642  005B  0678               	xorwf	_cont,w
   643  005C  0479               	iorwf	_cont+1,w
   644  005D  1D03               	btfss	3,2
   645  005E  2860               	goto	u12_21
   646  005F  2861               	goto	u12_20
   647  0060                     u12_21:
   648  0060  286C               	goto	i1l973
   649  0061                     u12_20:
   650  0061                     i1l971:
   651                           
   652                           ;LAB0.c: 67:                 PORTD = 1;
   653  0061  3001               	movlw	1
   654  0062  1283               	bcf	3,5	;RP0=0, select bank0
   655  0063  1303               	bcf	3,6	;RP1=0, select bank0
   656  0064  0088               	movwf	8	;volatile
   657                           
   658                           ;LAB0.c: 68:                 cont_display -= 1;
   659  0065  30FF               	movlw	255
   660  0066  07FC               	addwf	_cont_display,f
   661  0067  1803               	skipnc
   662  0068  0AFD               	incf	_cont_display+1,f
   663  0069  30FF               	movlw	255
   664  006A  07FD               	addwf	_cont_display+1,f
   665                           
   666                           ;LAB0.c: 69:             }
   667  006B  2899               	goto	i1l989
   668  006C                     i1l973:
   669  006C  3028               	movlw	40
   670  006D  0678               	xorwf	_cont,w
   671  006E  0479               	iorwf	_cont+1,w
   672  006F  1D03               	btfss	3,2
   673  0070  2872               	goto	u13_21
   674  0071  2873               	goto	u13_20
   675  0072                     u13_21:
   676  0072  287E               	goto	i1l977
   677  0073                     u13_20:
   678  0073                     i1l975:
   679                           
   680                           ;LAB0.c: 71:                 PORTD = 3;
   681  0073  3003               	movlw	3
   682  0074  1283               	bcf	3,5	;RP0=0, select bank0
   683  0075  1303               	bcf	3,6	;RP1=0, select bank0
   684  0076  0088               	movwf	8	;volatile
   685                           
   686                           ;LAB0.c: 72:                 cont_display -= 1;
   687  0077  30FF               	movlw	255
   688  0078  07FC               	addwf	_cont_display,f
   689  0079  1803               	skipnc
   690  007A  0AFD               	incf	_cont_display+1,f
   691  007B  30FF               	movlw	255
   692  007C  07FD               	addwf	_cont_display+1,f
   693                           
   694                           ;LAB0.c: 73:             }
   695  007D  2899               	goto	i1l989
   696  007E                     i1l977:
   697  007E  0879               	movf	_cont+1,w
   698  007F  3A80               	xorlw	128
   699  0080  00FF               	movwf	btemp+1
   700  0081  3080               	movlw	128
   701  0082  027F               	subwf	btemp+1,w
   702  0083  1D03               	skipz
   703  0084  2887               	goto	u14_25
   704  0085  303C               	movlw	60
   705  0086  0278               	subwf	_cont,w
   706  0087                     u14_25:
   707  0087  1C03               	skipc
   708  0088  288A               	goto	u14_21
   709  0089  288B               	goto	u14_20
   710  008A                     u14_21:
   711  008A  2899               	goto	i1l989
   712  008B                     u14_20:
   713  008B                     i1l979:
   714                           
   715                           ;LAB0.c: 75:                 PORTD = 7;
   716  008B  3007               	movlw	7
   717  008C  1283               	bcf	3,5	;RP0=0, select bank0
   718  008D  1303               	bcf	3,6	;RP1=0, select bank0
   719  008E  0088               	movwf	8	;volatile
   720  008F                     i1l981:
   721                           
   722                           ;LAB0.c: 76:                 cont = 0;
   723  008F  01F8               	clrf	_cont
   724  0090  01F9               	clrf	_cont+1
   725  0091                     i1l983:
   726                           
   727                           ;LAB0.c: 77:                 cont_display = 0;
   728  0091  01FC               	clrf	_cont_display
   729  0092  01FD               	clrf	_cont_display+1
   730  0093                     i1l985:
   731                           
   732                           ;LAB0.c: 78:                 cuenta_atras = 0;
   733  0093  01FA               	clrf	_cuenta_atras
   734  0094  01FB               	clrf	_cuenta_atras+1
   735  0095                     i1l987:
   736                           
   737                           ;LAB0.c: 79:                 inicio_carrera = 1;
   738  0095  3001               	movlw	1
   739  0096  00A0               	movwf	_inicio_carrera
   740  0097  3000               	movlw	0
   741  0098  00A1               	movwf	_inicio_carrera+1
   742  0099                     i1l989:
   743                           
   744                           ;LAB0.c: 81:             PORTC = tabla(cont_display);
   745  0099  087D               	movf	_cont_display+1,w
   746  009A  00F1               	movwf	tabla@a+1
   747  009B  087C               	movf	_cont_display,w
   748  009C  00F0               	movwf	tabla@a
   749  009D  120A  118A  20B1  120A  118A  	fcall	_tabla
   750  00A2  0870               	movf	?_tabla,w
   751  00A3  1283               	bcf	3,5	;RP0=0, select bank0
   752  00A4  1303               	bcf	3,6	;RP1=0, select bank0
   753  00A5  0087               	movwf	7	;volatile
   754  00A6                     i1l70:
   755  00A6  0875               	movf	??_isr+3,w
   756  00A7  00FF               	movwf	btemp+1
   757  00A8  0874               	movf	??_isr+2,w
   758  00A9  008A               	movwf	10
   759  00AA  0873               	movf	??_isr+1,w
   760  00AB  0084               	movwf	4
   761  00AC  0E72               	swapf	??_isr,w
   762  00AD  0083               	movwf	3
   763  00AE  0EFE               	swapf	btemp,f
   764  00AF  0E7E               	swapf	btemp,w
   765  00B0  0009               	retfie
   766  00B1                     __end_of_isr:
   767                           
   768                           	psect	intentry
   769  0004                     __pintentry:	
   770                           ;incstack = 0
   771                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   772                           
   773  0004                     interrupt_function:
   774  007E                     saved_w	set	btemp
   775  0004  00FE               	movwf	btemp
   776  0005  0E03               	swapf	3,w
   777  0006  00F2               	movwf	??_isr
   778  0007  0804               	movf	4,w
   779  0008  00F3               	movwf	??_isr+1
   780  0009  080A               	movf	10,w
   781  000A  00F4               	movwf	??_isr+2
   782  000B  1283               	bcf	3,5	;RP0=0, select bank0
   783  000C  1303               	bcf	3,6	;RP1=0, select bank0
   784  000D  087F               	movf	btemp+1,w
   785  000E  00F5               	movwf	??_isr+3
   786  000F  120A  118A  2837   	ljmp	_isr
   787                           
   788                           	psect	text3
   789  0147                     __ptext3:	
   790 ;; *************** function _tmr0 *****************
   791 ;; Defined at:
   792 ;;		line 137 in file "LAB0.c"
   793 ;; Parameters:    Size  Location     Type
   794 ;;		None
   795 ;; Auto vars:     Size  Location     Type
   796 ;;		None
   797 ;; Return value:  Size  Location     Type
   798 ;;                  1    wreg      void 
   799 ;; Registers used:
   800 ;;		wreg
   801 ;; Tracked objects:
   802 ;;		On entry : 0/0
   803 ;;		On exit  : 0/0
   804 ;;		Unchanged: 0/0
   805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   806 ;;      Params:         0       0       0       0       0
   807 ;;      Locals:         0       0       0       0       0
   808 ;;      Temps:          0       0       0       0       0
   809 ;;      Totals:         0       0       0       0       0
   810 ;;Total ram usage:        0 bytes
   811 ;; Hardware stack levels used: 1
   812 ;; This function calls:
   813 ;;		Nothing
   814 ;; This function is called by:
   815 ;;		_isr
   816 ;; This function uses a non-reentrant model
   817 ;;
   818                           
   819                           
   820                           ;psect for function _tmr0
   821  0147                     _tmr0:
   822  0147                     i1l875:	
   823                           ;incstack = 0
   824                           ; Regs used in _tmr0: [wreg]
   825                           
   826                           
   827                           ;LAB0.c: 138:     INTCONbits.T0IF = 0;
   828  0147  110B               	bcf	11,2	;volatile
   829  0148                     i1l877:
   830                           
   831                           ;LAB0.c: 139:     TMR0 = 61;
   832  0148  303D               	movlw	61
   833  0149  1283               	bcf	3,5	;RP0=0, select bank0
   834  014A  1303               	bcf	3,6	;RP1=0, select bank0
   835  014B  0081               	movwf	1	;volatile
   836  014C                     i1l84:
   837  014C  0008               	return
   838  014D                     __end_of_tmr0:
   839                           
   840                           	psect	text4
   841  00B1                     __ptext4:	
   842 ;; *************** function _tabla *****************
   843 ;; Defined at:
   844 ;;		line 143 in file "LAB0.c"
   845 ;; Parameters:    Size  Location     Type
   846 ;;  a               2    0[COMMON] int 
   847 ;; Auto vars:     Size  Location     Type
   848 ;;		None
   849 ;; Return value:  Size  Location     Type
   850 ;;                  2    0[COMMON] int 
   851 ;; Registers used:
   852 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   853 ;; Tracked objects:
   854 ;;		On entry : 0/0
   855 ;;		On exit  : 0/0
   856 ;;		Unchanged: 0/0
   857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   858 ;;      Params:         2       0       0       0       0
   859 ;;      Locals:         0       0       0       0       0
   860 ;;      Temps:          0       0       0       0       0
   861 ;;      Totals:         2       0       0       0       0
   862 ;;Total ram usage:        2 bytes
   863 ;; Hardware stack levels used: 1
   864 ;; This function calls:
   865 ;;		Nothing
   866 ;; This function is called by:
   867 ;;		_isr
   868 ;; This function uses a non-reentrant model
   869 ;;
   870                           
   871                           
   872                           ;psect for function _tabla
   873  00B1                     _tabla:
   874  00B1                     i1l881:	
   875                           ;incstack = 0
   876                           ; Regs used in _tabla: [wreg-fsr0h+status,2+status,0]
   877                           
   878                           
   879                           ;LAB0.c: 144:     switch (a){
   880  00B1  28E9               	goto	i1l949
   881  00B2                     i1l883:
   882                           
   883                           ;LAB0.c: 146:             return 0b00111111;
   884  00B2  303F               	movlw	63
   885  00B3  00F0               	movwf	?_tabla
   886  00B4  3000               	movlw	0
   887  00B5  00F1               	movwf	?_tabla+1
   888  00B6  2911               	goto	i1l89
   889  00B7                     i1l889:
   890                           
   891                           ;LAB0.c: 149:             return 0b00000110;
   892  00B7  3006               	movlw	6
   893  00B8  00F0               	movwf	?_tabla
   894  00B9  3000               	movlw	0
   895  00BA  00F1               	movwf	?_tabla+1
   896  00BB  2911               	goto	i1l89
   897  00BC                     i1l895:
   898                           
   899                           ;LAB0.c: 152:             return 0b01011011;
   900  00BC  305B               	movlw	91
   901  00BD  00F0               	movwf	?_tabla
   902  00BE  3000               	movlw	0
   903  00BF  00F1               	movwf	?_tabla+1
   904  00C0  2911               	goto	i1l89
   905  00C1                     i1l901:
   906                           
   907                           ;LAB0.c: 155:             return 0b01001111;
   908  00C1  304F               	movlw	79
   909  00C2  00F0               	movwf	?_tabla
   910  00C3  3000               	movlw	0
   911  00C4  00F1               	movwf	?_tabla+1
   912  00C5  2911               	goto	i1l89
   913  00C6                     i1l907:
   914                           
   915                           ;LAB0.c: 158:             return 0b01100110;
   916  00C6  3066               	movlw	102
   917  00C7  00F0               	movwf	?_tabla
   918  00C8  3000               	movlw	0
   919  00C9  00F1               	movwf	?_tabla+1
   920  00CA  2911               	goto	i1l89
   921  00CB                     i1l913:
   922                           
   923                           ;LAB0.c: 161:             return 0b01101101;
   924  00CB  306D               	movlw	109
   925  00CC  00F0               	movwf	?_tabla
   926  00CD  3000               	movlw	0
   927  00CE  00F1               	movwf	?_tabla+1
   928  00CF  2911               	goto	i1l89
   929  00D0                     i1l919:
   930                           
   931                           ;LAB0.c: 164:             return 0b01111101;
   932  00D0  307D               	movlw	125
   933  00D1  00F0               	movwf	?_tabla
   934  00D2  3000               	movlw	0
   935  00D3  00F1               	movwf	?_tabla+1
   936  00D4  2911               	goto	i1l89
   937  00D5                     i1l925:
   938                           
   939                           ;LAB0.c: 167:             return 0b00000111;
   940  00D5  3007               	movlw	7
   941  00D6  00F0               	movwf	?_tabla
   942  00D7  3000               	movlw	0
   943  00D8  00F1               	movwf	?_tabla+1
   944  00D9  2911               	goto	i1l89
   945  00DA                     i1l931:
   946                           
   947                           ;LAB0.c: 170:             return 0b01111111;
   948  00DA  307F               	movlw	127
   949  00DB  00F0               	movwf	?_tabla
   950  00DC  3000               	movlw	0
   951  00DD  00F1               	movwf	?_tabla+1
   952  00DE  2911               	goto	i1l89
   953  00DF                     i1l937:
   954                           
   955                           ;LAB0.c: 173:             return 0b01101111;
   956  00DF  306F               	movlw	111
   957  00E0  00F0               	movwf	?_tabla
   958  00E1  3000               	movlw	0
   959  00E2  00F1               	movwf	?_tabla+1
   960  00E3  2911               	goto	i1l89
   961  00E4                     i1l943:
   962                           
   963                           ;LAB0.c: 176:             return 0b01111011;
   964  00E4  307B               	movlw	123
   965  00E5  00F0               	movwf	?_tabla
   966  00E6  3000               	movlw	0
   967  00E7  00F1               	movwf	?_tabla+1
   968  00E8  2911               	goto	i1l89
   969  00E9                     i1l949:
   970                           
   971                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   972                           ; Switch size 1, requested type "simple"
   973                           ; Number of cases is 1, Range of values is 0 to 0
   974                           ; switch strategies available:
   975                           ; Name         Instructions Cycles
   976                           ; simple_byte            4     3 (average)
   977                           ; direct_byte           11     8 (fixed)
   978                           ; jumptable            260     6 (fixed)
   979                           ;	Chosen strategy is simple_byte
   980  00E9  0871               	movf	tabla@a+1,w
   981  00EA  3A00               	xorlw	0	; case 0
   982  00EB  1903               	skipnz
   983  00EC  28EE               	goto	i1l1077
   984  00ED  2911               	goto	i1l89
   985  00EE                     i1l1077:
   986                           
   987                           ; Switch size 1, requested type "simple"
   988                           ; Number of cases is 11, Range of values is 0 to 10
   989                           ; switch strategies available:
   990                           ; Name         Instructions Cycles
   991                           ; simple_byte           34    18 (average)
   992                           ; direct_byte           41     8 (fixed)
   993                           ; jumptable            260     6 (fixed)
   994                           ;	Chosen strategy is simple_byte
   995  00EE  0870               	movf	tabla@a,w
   996  00EF  3A00               	xorlw	0	; case 0
   997  00F0  1903               	skipnz
   998  00F1  28B2               	goto	i1l883
   999  00F2  3A01               	xorlw	1	; case 1
  1000  00F3  1903               	skipnz
  1001  00F4  28B7               	goto	i1l889
  1002  00F5  3A03               	xorlw	3	; case 2
  1003  00F6  1903               	skipnz
  1004  00F7  28BC               	goto	i1l895
  1005  00F8  3A01               	xorlw	1	; case 3
  1006  00F9  1903               	skipnz
  1007  00FA  28C1               	goto	i1l901
  1008  00FB  3A07               	xorlw	7	; case 4
  1009  00FC  1903               	skipnz
  1010  00FD  28C6               	goto	i1l907
  1011  00FE  3A01               	xorlw	1	; case 5
  1012  00FF  1903               	skipnz
  1013  0100  28CB               	goto	i1l913
  1014  0101  3A03               	xorlw	3	; case 6
  1015  0102  1903               	skipnz
  1016  0103  28D0               	goto	i1l919
  1017  0104  3A01               	xorlw	1	; case 7
  1018  0105  1903               	skipnz
  1019  0106  28D5               	goto	i1l925
  1020  0107  3A0F               	xorlw	15	; case 8
  1021  0108  1903               	skipnz
  1022  0109  28DA               	goto	i1l931
  1023  010A  3A01               	xorlw	1	; case 9
  1024  010B  1903               	skipnz
  1025  010C  28DF               	goto	i1l937
  1026  010D  3A03               	xorlw	3	; case 10
  1027  010E  1903               	skipnz
  1028  010F  28E4               	goto	i1l943
  1029  0110  2911               	goto	i1l89
  1030  0111                     i1l89:
  1031  0111  0008               	return
  1032  0112                     __end_of_tabla:
  1033  007E                     btemp	set	126	;btemp
  1034  007E                     wtemp0	set	126
  1035                           
  1036                           	psect	config
  1037                           
  1038                           ;Config register CONFIG1 @ 0x2007
  1039                           ;	Oscillator Selection bits
  1040                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1041                           ;	Watchdog Timer Enable bit
  1042                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1043                           ;	Power-up Timer Enable bit
  1044                           ;	PWRTE = OFF, PWRT disabled
  1045                           ;	RE3/MCLR pin function select bit
  1046                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1047                           ;	Code Protection bit
  1048                           ;	CP = OFF, Program memory code protection is disabled
  1049                           ;	Data Code Protection bit
  1050                           ;	CPD = OFF, Data memory code protection is disabled
  1051                           ;	Brown Out Reset Selection bits
  1052                           ;	BOREN = OFF, BOR disabled
  1053                           ;	Internal External Switchover bit
  1054                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1055                           ;	Fail-Safe Clock Monitor Enabled bit
  1056                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1057                           ;	Low Voltage Programming Enable bit
  1058                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1059                           ;	In-Circuit Debugger Mode bit
  1060                           ;	DEBUG = 0x1, unprogrammed default
  1061  2007                     	org	8199
  1062  2007  20D4               	dw	8404
  1063                           
  1064                           ;Config register CONFIG2 @ 0x2008
  1065                           ;	Brown-out Reset Selection bit
  1066                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1067                           ;	Flash Program Memory Self Write Enable bits
  1068                           ;	WRT = OFF, Write protection off
  1069  2008                     	org	8200
  1070  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      14
    BANK0            80      0       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_tabla

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  4     4      0      98
                                              2 COMMON     4     4      0
                              _tabla
                               _tmr0
 ---------------------------------------------------------------------------------
 (3) _tmr0                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _tabla                                                2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _isr (ROOT)
   _tabla
   _tmr0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       2       5        2.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      10      12        0.0%
ABS                  0      0      10       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jan 19 21:38:12 2022

                     l81 013D                       l75 0143                       l76 0143  
                    _isr 0037                      fsr0 0004                     l1011 0112  
                   l1021 0123                     l1013 011C                     l1031 012D  
                   l1023 0124                     l1015 011E                     l1041 0135  
                   l1033 012E                     l1025 012A                     l1017 0121  
                   l1051 013C                     l1043 0136                     l1035 012F  
                   l1027 012B                     l1019 0122                     l1045 0137  
                   l1037 0130                     l1029 012C                     l1047 0138  
                   l1039 0131                     l1055 013E                     l1049 0139  
                   ?_isr 0070                     _T0IF 005A                     i1l62 0047  
                   i1l70 00A6                     i1l84 014C                     i1l89 0111  
                   _TMR0 0001                     u8_20 003B                     u8_21 003A  
                   u9_20 0041                     u9_21 0040                     _cont 0078  
                   _main 013E                     _tmr0 0147                     btemp 007E  
                   start 0012                    ??_isr 0072                    ?_main 0070  
                  ?_tmr0 0070                    _ANSEL 0188                    i1l901 00C1  
                  i1l913 00CB                    i1l931 00DA                    i1l907 00C6  
                  i1l925 00D5                    i1l943 00E4                    i1l919 00D0  
                  i1l937 00DF                    i1l881 00B1                    i1l883 00B2  
                  i1l875 0147                    i1l971 0061                    i1l963 004B  
                  i1l955 0037                    i1l949 00E9                    i1l877 0148  
                  i1l981 008F                    i1l973 006C                    i1l965 004F  
                  i1l957 003B                    i1l895 00BC                    i1l983 0091  
                  i1l975 0073                    i1l967 0054                    i1l959 0041  
                  i1l889 00B7                    i1l985 0093                    i1l977 007E  
                  i1l969 005A                    i1l987 0095                    i1l979 008B  
                  i1l989 0099                    u10_20 0047                    u10_21 0046  
                  u11_20 004B                    u11_21 004A                    u12_20 0061  
                  u12_21 0060                    u13_20 0073                    u13_21 0072  
                  u14_20 008B                    u14_21 008A                    u14_25 0087  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _tabla 00B1                    _setup 0112                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0015  
           __end_of_main 0147             __end_of_tmr0 014D                   ??_main 0000  
                 ??_tmr0 0070                   ?_tabla 0070                   ?_setup 0070  
                 _ANSELH 0189                   i1l1077 00EE                   tabla@a 0070  
           __pdataCOMMON 007A                   saved_w 007E  __end_of__initialization 0033  
         __pcstackCOMMON 0070            __end_of_tabla 0112            __end_of_setup 013E  
         _OPTION_REGbits 0081                  ??_tabla 0072                  ??_setup 0000  
             __pbssBANK0 0020               __pmaintext 013E               __pintentry 0004  
         _inicio_carrera 0020                  __ptext1 0112                  __ptext2 0037  
                __ptext3 0147                  __ptext4 00B1             __size_of_isr 007A  
   end_of_initialization 0033                _PORTEbits 0009             _cont_display 007C  
           _cuenta_atras 007A            __pidataCOMMON 014D      start_initialization 0015  
            __end_of_isr 00B1              __pbssCOMMON 0076                ___latbits 0002  
          __pcstackBANK0 0000           __size_of_tabla 0061           __size_of_setup 002C  
      interrupt_function 0004                 _PIE1bits 008C                 _PIR1bits 000C  
         _timer_iniciado 0076            __size_of_main 0009            __size_of_tmr0 0006  
             _INTCONbits 000B                 intlevel1 0000               _OSCCONbits 008F  
